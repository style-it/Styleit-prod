{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./src/StyleIt/components/custom/textSelected.js","webpack:///./src/StyleIt/services/range.service.js","webpack:///./src/StyleIt/utilis/DomUtilis.js","webpack:///./src/StyleIt/services/className.service.js","webpack:///./src/StyleIt/services/attr.service.js","webpack:///./src/StyleIt/utilis/merger.js","webpack:///./src/StyleIt/services/textEditor.service.js","webpack:///./src/StyleIt/services/elements.service.js","webpack:///./src/StyleIt/services/style.service.js","webpack:///./src/StyleIt/rules/rules.js","webpack:///./src/StyleIt/utilis/splitHTML.js","webpack:///./src/StyleIt/services/copyPaste/copyPaste.service.js","webpack:///./src/StyleIt/services/events/events.js","webpack:///./src/StyleIt/services/link.service.js","webpack:///./src/StyleIt/services/Inspector/Inspector.service.js","webpack:///./src/StyleIt/connector.js","webpack:///./src/StyleIt/index.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","default","TextSelection","getAttribute","innerHTML","HTMLElement","customElements","createInnerWrapperElement","element","options","innerSpan","document","createElement","el","Array","from","childNodes","forEach","child","appendChild","GetClosestBlockElement","window","getComputedStyle","display","parentElement","wrapRangeWithElement","wrapTag","ranges","sel","getSelection","rangeCount","getRangeAt","getRanges","map","wrapperEl","range","wrapNode","isCollapsed","startNode","startContainer","endNode","endContainer","startOffset","endOffset","node","currentRange","createRange","currentWrapper","cloneNode","selectNodeContents","nodeType","setStart","setEnd","surroundContents","createWrapperFunction","getRangeTextNodes","wrapRangeText","flat","getTextNodes","walker","body","ownerDocument","createTreeWalker","NodeFilter","SHOW_TEXT","textNodes","nextNode","push","rangeIntersectsNode","intersectsNode","rangeA","rangeB","selectNode","e","createRangeFromNode","compareBoundaryPoints","Range","END_TO_START","START_TO_END","container","commonAncestorContainer","parentNode","filter","textContent","length","isNonEmptyTextNode","setSelectionBetweenTwoNodes","firstFlag","lastFlag","_options","remove","assign","setBaseAndExtent","unwrap","setSelectionFlags","firstElement","LastElement","setAttribute","prepend","obj","style","wrapper","elements","parents","isArray","_","insertBefore","_el","Document","getSelectedElement","anchorNode","Element","wrap","createSelection","createTextRange","moveToElementText","select","selection","removeAllRanges","addRange","ischildOf","parent","_wrap","getInheirtClassNames","fromElement","toElement","classes","_parent","classList","findIndex","getClasses","normalizeClassName","removeEmptyClass","className","removeAttribute","querySelectorAll","concat","clear","getInheirtAttributes","attributes","currectElement","attrs","getAttributes","getAll","Text","insertAfter","newNode","nextSibling","replaceNode","replacementNode","extraContents","extractContents","removeClassName","mergeNodeContect","DomUtilis","isElement","nodeName","Node","ELEMENT_NODE","firstChild","firstElementChild","_elementProps","getStyle","styleValue","trim","attr","normalizeStyle","attrValue","add","normalizeElement","mergeTwoNodes","elementOne","elementTwo","_elementsData","commoncLasses","classes1","classes2","c1","c2","includes","commonStyles","style1","style2","commmonStyles","style1Values","style2Values","clearElementClasses","clearElementStyles","children","recurse","_normalize","mergeNodesStyles","merged","nextElement","mergeNodesContent","mergedContent","normalize","unwrapped","ancNode","extentNode","JsonToElement","jsonObject","createHtmlElement","jsElement","isShouldRenderAttrs","tag","createTextNode","href","target","collectedStyle","styles","collectStyles","join","JsonObjectToStyleString","renderAttrs","type","Levels","jsChild","htmlElement","elementToJson","level","json","isValid","replace","keys","cn","v","getInheirtCss","intailStyle","toggleStyle","isOn","setStyle","data","textDecoration","closest","splits","splitHTML","center","rule","collectStyleFromSelectedElement","connectecElement","split","keyValue","setAttrs","template","centerElement","centerTemplate","leftElement","leftTemplate","leftRange","rightElement","rightTemplate","rightRange","left","right","validStyles","onPaste","event","textContentContainer","HtmlContainer","execCommand","preventDefault","clipboardData","innerText","getData","htmlNodes","callback","span","collectedStyles","replaced","outerHTML","error","removeChild","CopyPaste","start","addEventListener","removeEventListener","EVENTS","TARGETS","_blank","_self","_top","resetURL","src","createTempLinkElement","Atag","Inpsector","onInspect","launchInspect","selectedElement","aTag","protocol","onKeyDown","keyCode","onClick","Destroy","Connector","getElementById","renderedElement","Promise","resolve","then","RenderInnerHTML","plugins","copyPaste","inspector","usePlugins","Core","config","__config","undefined","on","modeHandlers","Modes","Toggle","onToggle","Extend","onExtend","events","styleChanged","connectedElement","Connect","toString","elementToUnwrap","baseNode","linkElements","closestATag","a","setProtocol","_protocol","newURL","_href","_target","testTarget","toLowerCase","renderedLink","link","isON","closestClass","isVAlidKeyValue","ELEMENTS","lastNode","caretHolder","createCaretPlacement","unWrap","selector","txtNode","closestElementToUnWrap","ToggleMode","TEXT_NODE","onOff","result","charIndex","focus","textNode","setCaretAt","dispatchEvent","atNode","payload","elementToSplit","splitElements","createBlockStyle","splitBlocks","blockElement","findBlock","computed","as","createInlineStyle","wrapTextNodeWithAppendStyle","createBlockElAndStyleIt","pargh","contentEditable","StyleIt","styleIt","execCmd","toggleClass","unLink","save","load","destroy","MODES"],"mappings":"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","file":"styleit-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"styleit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"styleit\"] = factory();\n\telse\n\t\troot[\"styleit\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require('./src').default;\r\n","\r\nclass TextSelection extends HTMLElement {\r\n    constructor(props) {\r\n      super();\r\n    }\r\n    connectedCallback(){\r\n      const createZeroSpace = this.getAttribute('zero-space');\r\n      if(createZeroSpace === \"true\"){\r\n        this.innerHTML = \"&#8203;\";\r\n\r\n      }\r\n    }\r\n  }\r\n  customElements.define('text-selection', TextSelection); ","\r\nexport function createInnerWrapperElement(element, options) {\r\n  if (typeof (options) !== \"object\") options = {};\r\n  let innerSpan = document.createElement(options.el || \"span\");\r\n  Array.from(element.childNodes).forEach(child => innerSpan.appendChild(child));\r\n  element.appendChild(innerSpan);\r\n  return innerSpan;\r\n}\r\nexport function GetClosestBlockElement(element) {\r\n  if (window.getComputedStyle(element).display === \"block\") return element;\r\n  let parentElement = element.parentElement;\r\n  while (parentElement && window.getComputedStyle(parentElement).display !== \"block\") {\r\n    if (parentElement.parentElement) {\r\n      parentElement = parentElement.parentElement;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return parentElement;\r\n}\r\n//TODO:review\r\n  export function wrapRangeWithBlockElement(limitElement) {\r\n    const wrapElementWithBlock = (el) =>{\r\n      let wEl = \"div\";\r\n      if(el.nodeName === \"SPAN\"){\r\n        wEl = \"p\";\r\n      }\r\n      const wrapper = document.createElement(wEl);\r\n      el.wrap(wrapper);\r\n      return wrapper;\r\n    }\r\n    const elements = [];\r\n    let nodes = wrapRangeWithElement();\r\n    nodes.forEach(el => {\r\n      const blockEl = GetClosestBlockElement(el);\r\n      if (blockEl) {\r\n        if( blockEl.ischildOf(limitElement)){\r\n          const founded = elements.find(block=>blockEl.ischildOf(block));\r\n          if(!founded)\r\n          elements.push(blockEl);\r\n        }else{\r\n          const _wrapper = wrapElementWithBlock(el);\r\n          elements.push(_wrapper);\r\n        }\r\n      } else {\r\n       const _wrapper = wrapElementWithBlock(el);\r\n        elements.push(_wrapper);\r\n\r\n      }\r\n    });\r\n    return {\r\n      nodes: nodes,\r\n      blocks: elements\r\n    }\r\n    return elements;\r\n  }\r\n  export function wrapRangeWithElement(wrapTag) {\r\n    const ranges = getRanges();\r\n    return ranges.map(r => {\r\n      return wrapRangeText(wrapTag, r);\r\n    }).flat();\r\n  }\r\n  export function getRanges() {\r\n    let ranges = [];\r\n\r\n    const sel = window.getSelection();\r\n\r\n    for (let i = 0; i < sel.rangeCount; i++) {\r\n      ranges[i] = sel.getRangeAt(i);\r\n    }\r\n    return ranges;\r\n  }\r\n  // return all text nodes that are contained within `el`\r\n  export function getTextNodes(el) {\r\n    el = el || document.body\r\n\r\n    var doc = el.ownerDocument || document,\r\n      walker = doc.createTreeWalker(el, NodeFilter.SHOW_TEXT, null, false),\r\n      textNodes = [],\r\n      node = walker.nextNode();\r\n\r\n    while (node) {\r\n      textNodes.push(node);\r\n      node = walker.nextNode();\r\n    }\r\n    return textNodes\r\n  }\r\n  export function rangesIntersect(rangeA, rangeB) {\r\n    return rangeA.compareBoundaryPoints(Range.END_TO_START, rangeB) === -1 &&\r\n      rangeA.compareBoundaryPoints(Range.START_TO_END, rangeB) === 1\r\n  }\r\n  export function createRangeFromNode(node) {\r\n    var range = node.ownerDocument.createRange()\r\n    try {\r\n      range.selectNode(node)\r\n    } catch (e) {\r\n      range.selectNodeContents(node)\r\n    }\r\n    return range\r\n  }\r\n  export function getCaretCharacterOffsetWithin(element) {\r\n    var caretOffset = 0;\r\n    var doc = element.ownerDocument || element.document;\r\n    var win = doc.defaultView || doc.parentWindow;\r\n    var sel;\r\n    if (typeof win.getSelection != \"undefined\") {\r\n      sel = win.getSelection();\r\n      if (sel.rangeCount > 0) {\r\n        var range = win.getSelection().getRangeAt(0);\r\n        var preCaretRange = range.cloneRange();\r\n        preCaretRange.selectNodeContents(element);\r\n        preCaretRange.setEnd(range.endContainer, range.endOffset);\r\n        caretOffset = preCaretRange.toString().length;\r\n      }\r\n    } else if ((sel = doc.selection) && sel.type != \"Control\") {\r\n      var textRange = sel.createRange();\r\n      var preCaretTextRange = doc.body.createTextRange();\r\n      preCaretTextRange.moveToElementText(element);\r\n      preCaretTextRange.setEndPoint(\"EndToEnd\", textRange);\r\n      caretOffset = preCaretTextRange.text.length;\r\n    }\r\n    return caretOffset;\r\n  }\r\n  export function setCaretAt(element, charIndex) {\r\n    var node = element;\r\n    node.focus();\r\n    var textNode = Array.from(node.childNodes).filter(child => child.nodeType === Node.TEXT_NODE);\r\n    var range = document.createRange();\r\n    range.setStart(textNode[0], charIndex);\r\n    range.setEnd(textNode[0], charIndex);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  }\r\n  export function pasteHtmlAtCaret(html) {\r\n    var sel, range;\r\n    if (window.getSelection) {\r\n      // IE9 and non-IE\r\n      sel = window.getSelection();\r\n      if (sel.getRangeAt && sel.rangeCount) {\r\n        range = sel.getRangeAt(0);\r\n        range.deleteContents();\r\n\r\n        // Range.createContextualFragment() would be useful here but is\r\n        // only relatively recently standardized and is not supported in\r\n        // some browsers (IE9, for one)\r\n        let el;\r\n        if (typeof (html) === \"string\") {\r\n          el = document.createElement(\"div\");\r\n          el.innerHTML = html;\r\n        }\r\n        else if (typeof (html) === \"object\") {\r\n          el = html;\r\n        }\r\n\r\n        var frag = document.createDocumentFragment(), node, lastNode;\r\n        while ((node = el.firstChild)) {\r\n          lastNode = frag.appendChild(node);\r\n        }\r\n        range.insertNode(frag);\r\n\r\n        // Preserve the selection\r\n        if (lastNode) {\r\n          range = range.cloneRange();\r\n          range.setStartAfter(lastNode);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  export function rangeIntersectsNode(range, node) {\r\n    if (range.intersectsNode) {\r\n      return range.intersectsNode(node)\r\n    } else {\r\n      return rangesIntersect(range, createRangeFromNode(node))\r\n    }\r\n  }\r\n  export function getRangeTextNodes(range) {\r\n    var container = range.commonAncestorContainer,\r\n      nodes = getTextNodes(container.parentNode || container)\r\n\r\n    return nodes.filter((node) => {\r\n      return rangeIntersectsNode(range, node) && isNonEmptyTextNode(node)\r\n    })\r\n  }\r\n  export function isNonEmptyTextNode(node) {\r\n    return node.textContent.length > 0\r\n  }\r\n  export function removeElement(el) {\r\n    if (el.parentNode) {\r\n      el.parentNode.removeChild(el)\r\n    }\r\n  }\r\n  export function replaceNode(replacementNode, node) {\r\n    if (typeof node.parentNode !== \"undefined\") {\r\n      removeElement(replacementNode);\r\n      node.parentNode.insertBefore(replacementNode, node);\r\n      removeElement(node);\r\n    }\r\n  }\r\n  export function selectText(node) {\r\n    if (document.body.createTextRange) {\r\n      const range = document.body.createTextRange();\r\n      range.moveToElementText(node);\r\n      range.select();\r\n    } else if (window.getSelection) {\r\n      const selection = window.getSelection();\r\n      const range = document.createRange();\r\n      range.selectNodeContents(node);\r\n      selection.removeAllRanges();\r\n      selection.addRange(range);\r\n    } else {\r\n      console.warn(\"Could not select text in node: Unsupported browser.\");\r\n    }\r\n  }\r\n  export function insertAfter(newNode, referenceNode) {\r\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\r\n  }\r\n  export function createWrapperFunction(wrapperEl, range) {\r\n    var startNode = range.startContainer,\r\n      endNode = range.endContainer,\r\n      startOffset = range.startOffset,\r\n      endOffset = range.endOffset\r\n\r\n    return function wrapNode(node) {\r\n      var currentRange = document.createRange(),\r\n        currentWrapper = wrapperEl.cloneNode()\r\n\r\n      currentRange.selectNodeContents(node);\r\n      if (node === startNode && startNode.nodeType === 3) {\r\n        currentRange.setStart(node, startOffset)\r\n        startNode = currentWrapper\r\n        startOffset = 0\r\n      }\r\n      if (node === endNode && endNode.nodeType === 3) {\r\n        currentRange.setEnd(node, endOffset)\r\n        endNode = currentWrapper;\r\n        endOffset = 1\r\n      }\r\n      currentRange.surroundContents(currentWrapper)\r\n      return currentWrapper\r\n    }\r\n  }\r\n  export function getAllNodes() {\r\n    var nodes, range;\r\n    if (typeof range === 'undefined') {\r\n      // get the current selection if no range is specified\r\n      range = window.getSelection().getRangeAt(0)\r\n    }\r\n    if (range.isCollapsed) {\r\n      // nothing to wrap\r\n      return []\r\n    }\r\n    nodes = getRangeTextNodes(range)\r\n    nodes = nodes.map(node => {\r\n      if (node !== null) {\r\n        while (node.nodeType === 3) {\r\n          node = node.parentNode;\r\n        }\r\n        return node;\r\n      }\r\n      return null;\r\n    });\r\n    return nodes\r\n  }\r\n  export function wrapRangeText(wrapperEl, range) {\r\n    var nodes, wrapNode;\r\n\r\n    if (typeof range === 'undefined') {\r\n      // get the current selection if no range is specified\r\n      range = window.getSelection().getRangeAt(0)\r\n    }\r\n\r\n    if (range.isCollapsed) {\r\n      // nothing to wrap\r\n      return []\r\n    }\r\n\r\n    if (typeof wrapperEl === 'undefined') {\r\n      wrapperEl = 'span'\r\n    }\r\n\r\n    if (typeof wrapperEl === 'string') {\r\n      // assume it's a tagname\r\n      wrapperEl = document.createElement(wrapperEl);\r\n    }\r\n\r\n    wrapNode = createWrapperFunction(wrapperEl, range)\r\n\r\n    nodes = getRangeTextNodes(range)\r\n\r\n    nodes = nodes.map(wrapNode);\r\n    return nodes\r\n  }\r\n  export function setSelectionBetweenTwoNodes(firstFlag, lastFlag,options = {}) {\r\n     const _options = {remove:true};\r\n     Object.assign(_options,options);\r\n        document.getSelection().setBaseAndExtent(firstFlag, 0, lastFlag, lastFlag.childNodes.length);\r\n        if(_options.remove){\r\n          [firstFlag, lastFlag].forEach(e => e.unwrap());\r\n        }\r\n  }\r\n  export function setSelectionFlags(firstElement, LastElement) {\r\n    const selection = window.getSelection();\r\n    const firstFlag = document.createElement('text-selection');\r\n    firstFlag.setAttribute('zero-space', firstElement.textContent.length === 0)\r\n    const lastFlag = document.createElement('text-selection');\r\n    lastFlag.setAttribute('zero-space', LastElement.textContent.length === 0)\r\n\r\n    firstElement.prepend(firstFlag); //Set flag the first\r\n    LastElement.appendChild(lastFlag); //Set Flag at last\r\n    return { firstFlag, lastFlag };\r\n  }\r\n  export function getSelectedHTML() {\r\n    var range;\r\n    if (window.getSelection) {\r\n      var selection = window.getSelection();\r\n      if (selection.focusNode === null) return;\r\n      range = selection.getRangeAt(0);\r\n      if (range.collapsed) {\r\n        return;\r\n      }\r\n      var content = range.extractContents();\r\n      return {\r\n        content: content,\r\n        range: range\r\n      }\r\n    }\r\n  }\r\n  export function saveSelection() {\r\n    if (window.getSelection) {\r\n      var sel = window.getSelection();\r\n      if (sel.getRangeAt && sel.rangeCount) {\r\n        return sel.getRangeAt(0);\r\n      }\r\n    } else if (document.selection && document.selection.createRange) {\r\n      return document.selection.createRange();\r\n    }\r\n    return null;\r\n  };\r\n  export function restoreSelection(range) {\r\n    if (range) {\r\n      if (window.getSelection) {\r\n        var sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n      } else if (document.selection && range.select) {\r\n        range.select();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n","class DomUtilis {\r\n\r\n\r\n  isElement(obj) {\r\n    try {\r\n      return obj instanceof HTMLElement;\r\n    }\r\n    catch (e) {\r\n      return (typeof obj === \"object\") &&\r\n        (obj.nodeType === 1) && (typeof obj.style === \"object\") &&\r\n        (typeof obj.ownerDocument === \"object\");\r\n    }\r\n  }\r\n  \r\n  wrap(el, wrapper) {\r\n    //el should be array\r\n    let elements = [];\r\n    if (Array.isArray(el)) {\r\n      elements = el;\r\n    } else {\r\n      elements = [el];\r\n    }\r\n\r\n    const parents = elements.map(e => e.parentNode);\r\n    var parentsDiff = parents.filter((p, _, self) => { return self[0] !== p });\r\n    if (parentsDiff.length !== 0) {\r\n      console.log(`[wrap] found ${parentsDiff.length} different parents 😅`);\r\n      return;\r\n    }\r\n    parents[0].insertBefore(wrapper, elements[0])\r\n    elements.forEach(_el => wrapper.appendChild(_el))\r\n\r\n    return true;\r\n  }\r\n}\r\nexport default new DomUtilis(); \r\n\r\nDocument.prototype.getSelectedElement=function(){var e=document.getSelection();if(null!==e){var t=e.anchorNode;if(null!==t){for(;3===t.nodeType;)t=t.parentNode;return t}return null}}\r\nElement.prototype.wrap = ( wrapper) => {\r\n  if (typeof wrapper === \"string\") wrapper = document.createElement(wrapper);\r\n  this.parentNode.insertBefore(wrapper, this);\r\n  wrapper.appendChild(this);\r\n  return wrapper;\r\n}\r\nElement.prototype.createSelection = function() {\r\n  if (document.body.createTextRange) {\r\n    const range = document.body.createTextRange();\r\n    range.moveToElementText(this);\r\n    range.select();\r\n  } else if (window.getSelection) {\r\n    const selection = window.getSelection();\r\n    const range = document.createRange();\r\n    range.selectNodeContents(this);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n  } \r\n}\r\nElement.prototype.ischildOf = function(parent) {\r\n  if (!parent) return false;\r\n  let node = this.parentNode;\r\n  while (node != null) {\r\n    if (node === parent) {\r\n      return true;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n  return false;\r\n}\r\nconst _wrap = function(wrapper) {\r\n  if (!this.parentNode) return false;\r\n  this.parentNode.insertBefore(wrapper, this);\r\n  wrapper.appendChild(this);\r\n  return wrapper;\r\n}\r\nText.prototype.wrap = _wrap;\r\nElement.prototype.wrap = _wrap;\r\nElement.prototype.insertAfter = function (newNode) {\r\n  this.parentNode.insertBefore(newNode, this.nextSibling);\r\n}\r\nElement.prototype.replaceNode = function(replacementNode) {\r\n  if (this.parentNode) {\r\n    this.parentNode.insertBefore(replacementNode, this)\r\n    this.remove();\r\n    return replacementNode;\r\n  }\r\n}\r\nElement.prototype.unwrap = function() {\r\n  var range = document.createRange()\r\n  range.selectNodeContents(this)\r\n  var extraContents = range.extractContents();\r\n  this.replaceNode(extraContents)\r\n  return extraContents;\r\n}\r\n","\r\nexport function getInheirtClassNames(fromElement, toElement) {\r\n    var classes = [];\r\n    var _parent = fromElement;\r\n    while (_parent && _parent.ischildOf(toElement.parentElement)) {\r\n        let map = _parent.classList;\r\n        Array.from(map).forEach(name => {\r\n            if (classes.findIndex(c => c === name) < 0) {\r\n                classes.push(name);\r\n            }\r\n        })\r\n        _parent = _parent.parentElement;\r\n    }\r\n    return classes;\r\n}\r\nexport function getClasses(element) {\r\n    return Array.from(element.classList);\r\n}\r\n\r\n//TODO: review\r\n//question: is expensive too much? \r\nexport function normalizeClassName(element) {\r\n    function removeEmptyClass(element){\r\n        if (!element.className) {\r\n            element.removeAttribute('class');\r\n        }\r\n    }\r\n    function clear(element) {\r\n        removeEmptyClass(element);\r\n        Array.from(element.classList).forEach(c => {\r\n            Array.from(element.querySelectorAll(`[class='${c}']`)).forEach(node =>{\r\n                node.classList.remove(c)\r\n                removeEmptyClass(node)\r\n            });\r\n        })\r\n    }\r\n    \r\n    const elements = Array.from(element.querySelectorAll('span[class]')).concat(element);\r\n    elements.forEach(child => clear(child));\r\n}\r\n//TODO: review\r\n//question: how about this name ? \r\nElement.prototype.removeClassName = function(className){\r\nconst nodes = Array.from(this.querySelectorAll(`[class='${className}']`)).concat(this);\r\nnodes.forEach(node=>node.classList.remove(className));\r\n}","\r\n\r\n//class and style not includes yet..\r\nexport function getInheirtAttributes(fromElement, toElement) {\r\n    var attributes = {};\r\n    var currectElement = fromElement;\r\n    while (currectElement && currectElement.ischildOf(toElement.parentElement)) {\r\n        var attrs = currectElement.attributes;\r\n        for(var i = attrs.length - 1; i >= 0; i--) {\r\n            if(attrs[i].name  !==\"class\" && attrs[i].name  !== \"style\"){\r\n                if(!attributes[attrs[i].name ]){\r\n                    attributes[attrs[i].name ] = attrs[i].value;\r\n                }\r\n            }\r\n          }\r\n      currectElement = currectElement.parentElement;\r\n    }\r\n    return attributes;\r\n  }\r\n  export function getAttributes(element,getAll){\r\n    var attributes = {};\r\n    var attrs = element.attributes;\r\n    for(var i = attrs.length - 1; i >= 0; i--) {\r\n        if(getAll  || (!getAll && attrs[i].name  !==\"class\" && attrs[i].name  !== \"style\")){\r\n            if(!attributes[attrs[i].name ]){\r\n                attributes[attrs[i].name ] = attrs[i].value;\r\n            }\r\n        }\r\n      }\r\n      return attributes;\r\n  }\r\n  export function removeAllAttrs(element){\r\n      if(element && !element.attributes){\r\n          console.error(\"element not have attributes..\");\r\n          return null;\r\n      }\r\n    Array.from(element.attributes).forEach(attr=>element.removeAttribute(attr.nodeName))\r\n  }","import DomUtilis from \"./DomUtilis\"\r\nimport { getStyle, normalizeStyle } from \"../services/style.service\";\r\nimport { getClasses, normalizeClassName } from \"../services/className.service\";\r\nimport { getAttributes } from \"../services/attr.service\";\r\nimport { normalizeElement } from \"../services/textEditor.service\";\r\nimport Config from '../_app.config.json';\r\n\r\n\r\n\r\n/**\r\n *  * Returns the new merge element\r\n * @param {Element} DomElement - element to merge with his first child\r\n */\r\nexport const mergeNodeContect = node => {\r\n\r\n    if (!DomUtilis.isElement(node)) {\r\n        console.error('one of the props is not dom element.., please insert two element to merge..');\r\n        return null;\r\n    }\r\n    if (node.nodeName !== \"SPAN\" || node.nodeType !== Node.ELEMENT_NODE) {\r\n        console.error('[mergeNodeContect] node is not a span');\r\n        return null;\r\n    }\r\n\r\n    const firstChild = node.firstElementChild;\r\n    if (!firstChild) {\r\n        console.error('[mergeNodeContect] first child not found');\r\n        return null;\r\n    }\r\n    if (firstChild.nodeName !== \"SPAN\" || firstChild.nodeType !== Node.ELEMENT_NODE) {\r\n        console.error('[mergeNodeContect] firstChild is not a span');\r\n        return null;\r\n    }\r\n    if (node.textContent !== firstChild.textContent) {\r\n        console.error('[mergeNodeContect] text content is different');\r\n        return null;\r\n    }\r\n    const _elementProps = {\r\n        style: getStyle(node),\r\n        classes: getClasses(node),\r\n        attrs: getAttributes(node)\r\n    }\r\n    for (const style in _elementProps.style) {\r\n        const styleValue = _elementProps.style[style];\r\n        firstChild.style[style] = (firstChild.style[style] + \" \" + styleValue).trim();\r\n    }\r\n    normalizeStyle(firstChild);\r\n\r\n    for (const attr in _elementProps.attrs) {\r\n        const attrValue = _elementProps.attrs[attr];\r\n        firstChild.setAttribute(attr, attrValue);\r\n    }\r\n    firstChild.classList.add(..._elementProps.classes);\r\n    normalizeClassName(firstChild);\r\n    normalizeElement(firstChild);\r\n    if(firstChild.parentElement)\r\n    firstChild.parentElement.unwrap();\r\n    return firstChild;\r\n};\r\nexport function mergeTwoNodes(elementOne, elementTwo) {\r\n    console.log('[mergeTwoNodes] START');\r\n    if (!DomUtilis.isElement(elementOne) || !DomUtilis.isElement(elementTwo)) {\r\n        console.error('one of the props is not dom element.., please insert two element to merge..');\r\n        return null;\r\n    }\r\n    if (elementOne.nodeName !== \"SPAN\" || elementTwo.nodeName !== \"SPAN\") {\r\n        console.error('one of the props is not dom element.., please insert two element to merge..');\r\n        return null;\r\n    }\r\n    const _elementsData = [{\r\n        style: getStyle(elementOne),\r\n        classes: getClasses(elementOne),\r\n        attrs: getAttributes(elementOne)\r\n    },\r\n    {\r\n        style: getStyle(elementTwo),\r\n        classes: getClasses(elementTwo),\r\n        attrs: getAttributes(elementTwo)\r\n    }]\r\n    const getCommonClasses = (classes1, classes2) => {\r\n        if (!classes1 || !classes2)\r\n            return [];\r\n        const c1 = [...classes1];\r\n        const c2 = [...classes2];\r\n        return c1.filter(c => c2.includes(c));\r\n    }\r\n    const getCommonStyles = (style1, style2) => {\r\n        const commmonStyles = {};\r\n        for (const s in style1) {\r\n            if (!style2[s])\r\n                continue;\r\n\r\n            const style1Values = style1[s];\r\n            const style2Values = style2[s];\r\n            if (style2Values === style1Values) {\r\n                commmonStyles[s] = style2Values;\r\n            }\r\n        }\r\n        return commmonStyles;\r\n    };\r\n    const commoncLasses = getCommonClasses(_elementsData[0].classes, _elementsData[1].classes);\r\n    console.log('commonClassses',commoncLasses,elementOne,elementTwo,_elementsData)\r\n\r\n    const commonStyles = getCommonStyles(_elementsData[0].style, _elementsData[1].style);\r\n    const buildWrappingElement = (commonStyles, commoncLasses) => {\r\n        const wrapper = document.createElement('span');\r\n        // handle styles\r\n        for (const s in commonStyles)\r\n            wrapper.style[s] = commonStyles[s];\r\n            \r\n\r\n        // handle classes\r\n        if (commoncLasses.length > 0) {\r\n            wrapper.classList.add(...commoncLasses);\r\n        }\r\n        if (wrapper.attributes.length === 0) {\r\n            wrapper.unwrap();\r\n            return null;\r\n        }\r\n        return wrapper;\r\n    }\r\n    const wrapper = buildWrappingElement(commonStyles, commoncLasses);\r\n    if (!wrapper) {\r\n        console.error('wrapper is null')\r\n        return null;\r\n    }\r\n\r\n    const clearElementClasses = (node, commoncLasses) => {\r\n        node.classList.remove(...commoncLasses);\r\n        normalizeClassName(node);\r\n    }\r\n    const clearElementStyles = (node, commonStyles) => {\r\n        for (const s in commonStyles)\r\n            node.style[s] = null;\r\n    }\r\n    const elements = [elementOne, elementTwo];\r\n    elements.forEach(e => {\r\n        clearElementClasses(e, commoncLasses);\r\n        clearElementStyles(e, commonStyles);\r\n    })\r\n\r\n    DomUtilis.wrap(elements, wrapper);\r\n    [...wrapper.children].forEach(c => {\r\n        normalizeElement(c)\r\n    })\r\n    return wrapper;\r\n};\r\n\r\n\r\nexport function mergeCommonValuesObject(obj1, obj2) {\r\n    let commonValues = {};\r\n    for (const key in obj1) {\r\n        if (obj2[key] && obj2[key] === obj1[key]) {\r\n            commonValues[key] = obj1[key]\r\n        }\r\n    }\r\n    return commonValues;\r\n}\r\n\r\nexport function mergeCommonArrays(arr1, arr2) {\r\n    const mergeArr = [];\r\n    Array.from(arr1).forEach(item => {\r\n        if (arr2.findIndex(i => i === item) > 0) {\r\n            mergeArr.push(item);\r\n        }\r\n    })\r\n    return mergeArr;\r\n}","import { normalizeClassName } from \"./className.service\";\r\nimport { normalizeStyle } from \"./style.service\";\r\nimport { mergeNodeContect, mergeTwoNodes } from \"../utilis/merger\";\r\n\r\n/**\r\n * @param {Element} DomElement - element to normalize\r\n */\r\nexport function normalizeElement(el) {\r\n    const recurse = (element) => {\r\n        Array.from(element.children).forEach((child) => {\r\n            recurse(child);\r\n            _normalize(child);\r\n        })\r\n        const mergeNodesStyles = element => {\r\n            let merged = false;\r\n            Array.from(element.children).forEach((element) => {\r\n                let wrapper = element;\r\n                while (wrapper !== null) {\r\n                    const nextElement = wrapper.nextSibling;\r\n                    if (!nextElement)\r\n                        break;\r\n                    wrapper = mergeTwoNodes(wrapper, nextElement);\r\n                    merged = merged || wrapper !== null;\r\n                }\r\n            })\r\n            return merged;\r\n        }\r\n\r\n        const mergeNodesContent = element => {\r\n            let merged = false;\r\n            Array.from(element.children).forEach((child) => {\r\n                let wrapper = child;\r\n                while (wrapper !== null) {\r\n                    wrapper = mergeNodeContect(wrapper);\r\n                    merged = merged || wrapper !== null;\r\n                }\r\n            })\r\n            return merged;\r\n        }\r\n        let mergedStyles = false;\r\n        let mergedContent = false;\r\n        do {\r\n            _normalize(element);\r\n            mergedStyles = mergeNodesStyles(element);\r\n            mergedContent = mergeNodesContent(element);\r\n        } while (mergedContent);\r\n    }\r\n    el.normalize();\r\n    recurse(el);\r\n\r\n    function _normalize(element) {\r\n        element.normalize();\r\n        normalizeClassName(element);\r\n        normalizeStyle(element);\r\n        // const tags = [\"STRIKE\", \"EM\", \"I\", \"B\", \"STRONG\", \"U\", \"A\",\"SPAN\"];\r\n        //TODO: normalizr attributes (no:style,className)\r\n        if (element && element.nodeName === \"SPAN\" && (!element.textContent.trim() || element.attributes.length === 0)) {\r\n            const unwrapped = element.unwrap();\r\n            unwrapped.normalize();\r\n            //TODO: check the return;\r\n            return unwrapped.parentElement;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array} textNodes - textnode to remove the zero space like : u200B\r\n */\r\nexport function removeZeroSpace(textNodes) {\r\n    if (!Array.isArray(textNodes)) {\r\n        textNodes = [textNodes];\r\n    }\r\n    textNodes.forEach(el => {\r\n        if (el.nodeType === Node.TEXT_NODE && el.parentElement && el.parentElement.nodeName !== \"TEXT-SELECTION\") {\r\n            el.textContent = el.textContent.replace(/\\u200B/g, '');\r\n        }\r\n    })\r\n}\r\n","import { getStyle, JsonObjectToStyleString } from \"./style.service\";\r\nimport Levels from '../constants/Levels.json';\r\n\r\nexport  function walkTheDOM(node, func) {\r\n    if(!node) return null;\r\n    func(node);\r\n    node = node.firstChild;\r\n    while (node) {\r\n      walkTheDOM(node, func);\r\n      node = node.nextSibling;\r\n    }\r\n  }\r\n  \r\nexport function getSelectedElement() {\r\n    var node = document.getSelection();\r\n    if (node !== null) {\r\n        var ancNode = node.extentNode;\r\n        if (ancNode !== null) {\r\n            while (ancNode.nodeType === 3) {\r\n                ancNode = ancNode.parentNode;\r\n            }\r\n            // const el = (ancNode.nodeType === 3 ? ancNode.parentNode : node);\r\n            return ancNode;\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport function JsonToElement(jsonObject, parentElement) {\r\n    //TODO: create parentelement and jsonobject validation   \r\n    const renderAttrs = (jsElement, element) => {\r\n        if (jsElement.classList) {\r\n            element.classList = [...jsElement.classList];\r\n        }\r\n        if (jsElement.style) {\r\n            const collectedStyle = JsonObjectToStyleString(jsElement.style);\r\n            element.style = collectedStyle;\r\n        }\r\n        //TODO: other attrs...\r\n    }\r\n    const createHtmlElement = (jsElement) => {\r\n        const nodeType = jsElement.tag;\r\n        let element;\r\n        let isShouldRenderAttrs;\r\n        switch (nodeType) {\r\n            case \"#text\":\r\n                element = document.createTextNode(jsElement.textContent);\r\n                break;\r\n            case \"A\":\r\n                element = document.createElement(nodeType);\r\n                element.href = jsElement.href;\r\n                element.target = jsElement.target;\r\n                break;\r\n            default:\r\n                element = document.createElement(nodeType);\r\n                isShouldRenderAttrs = true;\r\n                break;\r\n        }\r\n        if (isShouldRenderAttrs && element) {\r\n            renderAttrs(jsElement, element);\r\n        }\r\n        return element;\r\n    }\r\n    if (!parentElement && jsonObject.type === Levels['0']) {\r\n        parentElement = createHtmlElement(jsonObject);\r\n    }\r\n    if (Array.isArray(jsonObject.children)) {\r\n        jsonObject.children.forEach(jsChild => {\r\n            const htmlElement = createHtmlElement(jsChild);\r\n            if (htmlElement) {\r\n                parentElement.appendChild(htmlElement);\r\n                JsonToElement(jsChild, htmlElement);\r\n            } else {\r\n                console.error('cant create dom element from json', jsChild);\r\n            }\r\n        });\r\n    }\r\n    return parentElement;\r\n}\r\nexport function elementToJson(node, level) {\r\n    \r\n    if (typeof (level) !== \"number\") level = 0;\r\n    const nodeType = node.nodeName;\r\n    let isShouldRenderAttrs = true;\r\n    let json = {};\r\n    let isValid = true;\r\n\r\n    if (Levels[level]) {\r\n        json.type = Levels[level];\r\n        level++;\r\n    }\r\n\r\n    switch (nodeType) {\r\n        case \"#text\":\r\n            json.tag = nodeType;\r\n            json.textContent = node.textContent.replace(/\\u200B/g, '');\r\n            isShouldRenderAttrs = false;\r\n            //question: replace \\n ?\r\n            if (!json.textContent.trim()) isValid = false;\r\n            break;\r\n        case \"A\":\r\n            json.tag = nodeType;\r\n            json.href = node.href;\r\n            json.target = node.target;\r\n            break;\r\n        default:\r\n            json.tag = nodeType;\r\n            //TODO: should we unwrap this node ? \r\n            break;\r\n    }\r\n    if (!isValid) return null;\r\n    if (isShouldRenderAttrs) {\r\n        //TODO: get attrs \r\n        const style = getStyle(node);\r\n        if (Object.keys(style).length > 0) {\r\n            json.style = style;\r\n        }\r\n        if (node.classList && node.classList.length > 0)\r\n            json.classList = [...node.classList];\r\n\r\n        if (node.childNodes && node.childNodes.length > 0)\r\n            json.children = [...node.childNodes].map((cn) => elementToJson(cn, level)).filter(v => v);\r\n    }\r\n\r\n    return json;\r\n\r\n}","import { normalizeClassName } from \"./className.service\";\r\nimport { UseRules } from \"../rules/rules\";\r\nimport { getSelectedElement } from \"./elements.service\";\r\n\r\nexport function getInheirtCss(fromElement, toElement) {\r\n    var intailStyle = {};\r\n    var currectElement = fromElement;\r\n    while (currectElement && currectElement.ischildOf(toElement.parentElement)) {\r\n        let map = getStyle(currectElement);\r\n        for (const style in map) {\r\n            if (map.hasOwnProperty(style)) {\r\n                const value = map[style];\r\n                // text-decoration  could be twice like underline and strike therough.. \r\n                if (!intailStyle[style])\r\n                    intailStyle[style] = value;\r\n            }\r\n        }\r\n        currectElement = currectElement.parentElement;\r\n    }\r\n    return intailStyle;\r\n}\r\nexport function removeStyle(element, key, value) {\r\n    element.style[key] = element.style[key].replace(value, \"\");\r\n    Array.from(element.querySelectorAll(`[style*='${key}']`)).forEach(el => {\r\n        el.style[key] = el.style[key].replace(value, \"\");\r\n    })\r\n}\r\n//TOGGLE\r\nexport function toggleStyle(element, key, value, isOn) {\r\n    if (isOn) {\r\n        element.style[key] = element.style[key] + \" \" + value;\r\n    } else {\r\n        element.style[key] = element.style[key].replace(value, \"\");\r\n    }\r\n    normalizeStyle(element);\r\n    normalizeClassName(element);\r\n    Array.from(element.querySelectorAll(`[style*='${value}']`)).forEach(child => {\r\n        child.style[key] = child.style[key].replace(value, \"\");\r\n        normalizeStyle(child);\r\n        normalizeClassName(child);\r\n    })\r\n}\r\n//EXTEND\r\n//TODO: fix name\r\nexport function setStyles(element, jsonStyle) {\r\n    for (const key in jsonStyle) {\r\n        if (jsonStyle.hasOwnProperty(key)) {\r\n            const style = jsonStyle[key];\r\n            element.style[key] = style;\r\n        }\r\n    }\r\n}\r\n//TOGGLE\r\n//TODO: fix name\r\nexport function setStyle(element, key, value) {\r\n    element.style[key] = value;\r\n    if(key === \"color\"){\r\n        UseRules({element:element,key:'color',value:value});\r\n    }\r\n    Array.from(element.querySelectorAll(`[style*='${key}']`)).forEach(el => {\r\n        el.style[key] = null;\r\n        normalizeStyle(el);\r\n    });\r\n    //experimental: style the text decorations with color..\r\n    //TODO:review\r\n    // UseRules({element:element,key:key,value:value});\r\n}\r\nexport const collectStyleFromSelectedElement = (connectecElement) =>{   \r\n    const selectedElement = getSelectedElement();                \r\n    return getInheirtCss(selectedElement,connectecElement);\r\n}\r\n\r\nexport function normalizeStyle(element) {\r\n    if(!element) return null;\r\n    //TODO:review\r\n    const style = element.getAttribute('style');\r\n    if (!style) {\r\n        element.removeAttribute('style');\r\n    } else {\r\n        const collectStyles = getStyle(element);\r\n        for (const key in collectStyles) {\r\n            if (collectStyles.hasOwnProperty(key)) {\r\n                Array.from(element.querySelectorAll(`[style*='${collectStyles[key]}']`)).forEach(el => {\r\n                    el.style[key] = null;\r\n                    normalizeStyle(el);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function JsonObjectToStyleString(styles) {\r\n    let collectStyles = [];\r\n    for (const key in styles) {\r\n        if (styles.hasOwnProperty(key)) {\r\n            const style = styles[key];\r\n            collectStyles.push(`${key}:${style}`);\r\n        }\r\n    }\r\n    return collectStyles.join(';');\r\n}\r\nexport function getStyle(el) {\r\n    if (!el || !el.style) return {};\r\n    let styles = {};\r\n    let style = el.getAttribute('style');\r\n    if (style) {\r\n        let collectStyles = style.split(';');\r\n        if (Array.isArray(collectStyles)) {\r\n            collectStyles.forEach(style => {\r\n\r\n                const keyValue = style.split(':');\r\n                if (keyValue[1] && keyValue[0])\r\n                    styles[keyValue[0].trim()] = keyValue[1].trim();\r\n            })\r\n        }\r\n\r\n    }\r\n    return styles;\r\n}","import { setStyle, normalizeStyle } from \"../services/style.service\";\r\nimport { splitHTML } from \"../utilis/splitHTML\";\r\nimport { normalizeElement } from \"../services/textEditor.service\";\r\n\r\n//TODO:review\r\nexport function UseRules(data) {\r\n    const ColorTextDecorationRule = (data) => {\r\n        if (data.key === \"color\") {\r\n            const textDecoration = data.element.closest(`[style*='text-decoration']`);\r\n            if (textDecoration) {\r\n                const splits = splitHTML(data.element, textDecoration);\r\n                if (splits) {\r\n                    normalizeStyle();\r\n                    setStyle(splits.center, 'text-decoration-color', `${data.value}`);\r\n                    for (const key in splits) {\r\n                        const element = splits[key];\r\n                        normalizeElement(element);\r\n                    }\r\n                } else {\r\n                    setStyle(textDecoration, 'text-decoration-color', `${data.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const Rules = [\r\n        ColorTextDecorationRule\r\n    ]\r\n    Rules.forEach(rule => rule(data));\r\n}","import DomUtilis from \"./DomUtilis\"\r\nimport { getInheirtCss } from \"../services/style.service\";\r\nimport { getInheirtAttributes } from \"../services/attr.service\";\r\nimport { getInheirtClassNames } from \"../services/className.service\";\r\n\r\n\r\nexport function splitHTML(fromElement, toElement,options = {}) {\r\n    const {tag = \"span\"} = options;\r\n    if (!fromElement.ischildOf(toElement)) {\r\n        console.error('fromElement must be child of toElement')\r\n        return null;\r\n    }\r\n    if (!DomUtilis.isElement(fromElement) || !DomUtilis.isElement(toElement)) {\r\n        console.error('fromElement && toElement must be dom elements..');\r\n        return null;\r\n    }\r\n    const setAttrs = (fromElement, toElement) => {\r\n        const styles = getInheirtCss(fromElement, toElement);\r\n        const attrs = getInheirtAttributes(fromElement, toElement);\r\n        const className = getInheirtClassNames(fromElement, toElement);\r\n        const template = document.createElement(tag);\r\n        template.className = className.join(\" \");\r\n        for (const style in styles) {\r\n            const value = styles[style];\r\n            template.style[style] = value;\r\n        }\r\n        for (const attr in attrs) {\r\n            const value = attrs[attr];\r\n            template.setAttribute(attr, value);\r\n        }\r\n        return template;\r\n    }\r\n    fromElement.createSelection();\r\n    const centerElement = document.getSelectedElement();\r\n    const centerTemplate = setAttrs(centerElement, toElement);\r\n    //center\r\n    centerTemplate.appendChild(fromElement);\r\n    var sel = window.getSelection();\r\n    var range = sel.getRangeAt(0);\r\n    //left\r\n    range.setStart(toElement, 0);\r\n    const leftElement = document.getSelectedElement();\r\n    const leftTemplate = setAttrs(leftElement, toElement);\r\n    var leftRange = range.extractContents();\r\n    leftTemplate.appendChild(leftRange);\r\n    //right\r\n    range.setEnd(toElement, toElement.childNodes.length);\r\n    const rightElement = document.getSelectedElement();\r\n    const rightTemplate = setAttrs(rightElement, toElement);\r\n    var rightRange = range.extractContents();\r\n    rightTemplate.appendChild(rightRange);\r\n    const split = {\r\n        left: leftTemplate,\r\n        center: centerTemplate,\r\n        right: rightTemplate\r\n    }\r\n    toElement.innerHTML = \"\";\r\n    for (const el in split) {\r\n        const element = split[el];\r\n        toElement.appendChild(element);\r\n    }\r\n    toElement.unwrap();\r\n    return split;\r\n\r\n}","\r\nconst validStyles = {\r\n  \"textDecoration\": true,\r\n  \"fontSize\": true,\r\n  \"fontStyle\": true,\r\n  // \"lineHeight\": true,\r\n  \"color\": true,\r\n  \"backgroundColor\": true,\r\n  \"fontWeight\": true,\r\n  \"textShadow\": true,\r\n  \"fontFamily\": true\r\n\r\n}\r\nconst onPaste = (event) => {\r\n  document.execCommand(\"DefaultParagraphSeparator\", false, \"p\");\r\n  event.preventDefault();\r\n  let textContentContainer;\r\n  let HtmlContainer;\r\n  try {\r\n    const data = event.clipboardData || window.clipboardData;\r\n    textContentContainer = document.createElement(\"div\");\r\n    textContentContainer.innerText = data.getData('text/plain').trim();;\r\n    HtmlContainer = document.createElement(\"div\");\r\n    HtmlContainer.innerHTML = data.getData('text/html').trim();\r\n    document.body.appendChild(textContentContainer);\r\n    document.body.appendChild(HtmlContainer);\r\n\r\n    const htmlNodes = [];\r\n    const recurse = (el, callback) => {\r\n      el.childNodes.forEach(node => {\r\n        callback(node);\r\n        if (node.nodeType === 1) {\r\n          recurse(node, callback);\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n    recurse(HtmlContainer, (node) => {\r\n      if (node.nodeType === 3) {\r\n        const span = document.createElement(\"span\");\r\n        for (const key in validStyles) {\r\n          if (Object.hasOwnProperty.call(validStyles, key)) {\r\n            span.style[key] = \"inherit\";\r\n          }\r\n        }\r\n        node.wrap(span);\r\n        htmlNodes.push(span);\r\n      }\r\n    });\r\n    htmlNodes.forEach(s => {\r\n      if (!s.textContent.trim()) return;\r\n      const collectedStyles = window.getComputedStyle(s);\r\n      for (const key in collectedStyles) {\r\n        if (Object.hasOwnProperty.call(collectedStyles, key)) {\r\n          const value = collectedStyles[key];\r\n          if (validStyles[key]) {\r\n            if (value === \"inherit\") {\r\n              s.style[key] = \"\";\r\n            } else if (value.includes(\"none\")) {\r\n              s.style[key] = \"\";\r\n            } else if (value.replace(/ /gm, \"\").includes(\"(0,0,0\")) {\r\n              s.style[key] = \"\";\r\n            } else if (value === \"normal\") {\r\n              s.style[key] = \"\";\r\n            } else {\r\n              s.style[key] = value;\r\n\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n    const textNodes = []\r\n    recurse(textContentContainer, (node => {\r\n      textNodes.push(node)\r\n    }));\r\n    htmlNodes.forEach(el => {\r\n      const replaced = textContentContainer.innerHTML.replace(el.textContent, el.outerHTML);;\r\n      textContentContainer.innerHTML = replaced\r\n    });\r\n    document.execCommand('inserthtml', false, textContentContainer.innerHTML);\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n  }\r\n  finally {\r\n    textContentContainer.parentNode.removeChild(textContentContainer);\r\n    HtmlContainer.parentNode.removeChild(HtmlContainer);\r\n  }\r\n};\r\n\r\nexport default class CopyPaste {\r\n\r\n  constructor(target) {\r\n    this.target = target;\r\n    this.start();\r\n  }\r\n  start() {\r\n    this.target.addEventListener(\"paste\", onPaste);\r\n  }\r\n  destroy() {\r\n    this.target.removeEventListener(\"paste\", onPaste);\r\n  }\r\n}","export const EVENTS = {\r\n  \r\n}","export   const TARGETS = {\r\n    _blank: \"_blank\",\r\n    _self: \"_self\",\r\n    _parent: \"_parent\",\r\n    _top: \"_top\"\r\n}\r\nexport  const resetURL = (src) => {\r\n    src = src.replace(/https:/g, '');\r\n    src = src.replace(/http:/g, '');\r\n    src = src.replace(/mailto:/g, '');\r\n    src = src.replace(/tel:/g, '');\r\n    src = src.replace(/\\//g, '');\r\n    return src;\r\n}\r\nexport   const createTempLinkElement = (href) => {\r\n    const Atag = document.createElement(\"a\");\r\n    Atag.href = href;\r\n    return Atag;\r\n}","\r\nimport { collectStyleFromSelectedElement } from '../style.service';\r\nimport { EVENTS } from '../events/events';\r\nimport { getSelectedElement } from '../elements.service';\r\nimport { resetURL } from '../link.service';\r\n\r\n//TODO: review\r\n//question: how can we expose the collectedStyle ? \r\n//question: should we use this ? https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\nexport default class Inpsector {\r\n    constructor(target, onInspect) {\r\n\r\n        if (!target) {\r\n            console.error('[-] Inpsector => target is null');\r\n            return null;\r\n        }\r\n        //TODO: use the validator\r\n        this.onInspect = onInspect;\r\n        this.target = target;\r\n\r\n        const launchInspect = () => {\r\n            const collectedStyle = collectStyleFromSelectedElement(this.target);\r\n            if (typeof (this.onInspect) === \"function\")\r\n                this.onInspect(collectedStyle);\r\n            if (typeof (EVENTS[\"inspect\"]) === \"function\") {\r\n                EVENTS[\"inspect\"](collectedStyle);\r\n            }\r\n            const selectedElement = getSelectedElement();\r\n            \r\n            if(selectedElement ){\r\n                const aTag = selectedElement.closest(\"a\");\r\n                if(aTag){\r\n                    if(typeof(EVENTS[\"inspectLink\"]) === \"function\"){\r\n                        EVENTS[\"inspectLink\"]({\r\n                            protocol:aTag.protocol,\r\n                            href:resetURL(aTag.href),\r\n                            target:aTag.getAttribute(\"target\") || \"\",\r\n                            element:aTag\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.onKeyDown = (e) => {\r\n            //TODO: review\r\n            if (e.keyCode === 8 && this.target.children.length <= 1 && !this.target.textContent) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n            launchInspect();\r\n        }\r\n        this.onClick = () => {\r\n            launchInspect();\r\n        }\r\n\r\n        this.target.addEventListener('click', this.onClick);\r\n        this.target.addEventListener('keydown', this.onKeyDown);\r\n\r\n        this.Destroy = () => {\r\n            this.target.removeEventListener('click', this.onClick);\r\n            this.target.removeEventListener('keydown', this.onKeyDown);\r\n            this.target = null;\r\n        }\r\n    }\r\n}","import DomUtilis from \"./utilis/DomUtilis\";\r\nimport CopyPaste from \"./services/copyPaste/copyPaste.service\";\r\nimport Inpsector from \"./services/Inspector/Inspector.service\";\r\nimport KeyPress from \"./services/keyPress/KeyPress\";\r\n\r\nimport { elementToJson, JsonToElement } from \"./services/elements.service\";\r\n\r\n//TODO:review\r\nexport default class Connector {\r\n    constructor() {\r\n    }\r\n\r\n    Connect(element, options) {\r\n        if (typeof element === \"string\") {\r\n            element = document.getElementById(element);\r\n            if (!element) {\r\n                //TODO: use the validator\r\n                console.error('[-] =>connectWith should be element id or dom element..');\r\n                return null;\r\n            }\r\n        } else if (DomUtilis.isElement(element)) {\r\n            // valid..\r\n        } else {\r\n            //TODO: use the validator\r\n            console.error('[-] =>connectWith should be element id or dom element..');\r\n            return null;\r\n        }\r\n       const RenderInnerHTML = (element) => {\r\n            const emptyElement = (node) => {\r\n                return new Promise((resolve) => {\r\n                    while (node.firstElementChild) {\r\n                        node.firstElementChild.remove();\r\n                    }\r\n                    resolve();\r\n                })\r\n            }\r\n            const jsonContent = elementToJson(element);\r\n    \r\n            const renderedElement = JsonToElement(jsonContent);\r\n    \r\n            emptyElement(element).then(() => element.innerHTML = renderedElement.innerHTML);\r\n        }\r\n        const usePlugins = (element, options) => {\r\n            return {\r\n                copyPaste: new CopyPaste(element),\r\n                inspector: new Inpsector(element, options.onInspect),\r\n                // keyPress: new KeyPress(element, options.onKeyPress)\r\n            }\r\n        }\r\n        RenderInnerHTML(element);\r\n        // element.contentEditable = 'true';\r\n        this.plugins = usePlugins(element, options);\r\n        return element;\r\n    }\r\n    //TODO: destory events..\r\n    //question: how to use the events ? \r\n    \r\n\r\n    Destroy() {\r\n        for (const key in this.plugins) {\r\n            if (this.plugins.hasOwnProperty(key)) {\r\n                const plugin = this.plugins[key];\r\n                plugin.Destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import {\r\n    wrapRangeWithElement,\r\n    setSelectionFlags,\r\n    setSelectionBetweenTwoNodes,\r\n    getTextNodes,\r\n    createInnerWrapperElement,\r\n    setCaretAt,\r\n    GetClosestBlockElement\r\n} from \"./services/range.service\";\r\nimport Modes from './constants/Modes.json';\r\nimport { splitHTML } from \"./utilis/splitHTML\";\r\nimport { setStyle, toggleStyle, collectStyleFromSelectedElement } from \"./services/style.service\";\r\nimport { normalizeElement, removeZeroSpace } from \"./services/textEditor.service\";\r\nimport Connector from './connector';\r\nimport './components/custom/textSelected';\r\nimport { elementToJson, JsonToElement, getSelectedElement } from \"./services/elements.service\";\r\nimport {EVENTS} from './services/events/events';\r\nimport { createTempLinkElement, resetURL,TARGETS } from \"./services/link.service\";\r\nexport default class Core {\r\n\r\n    // *target => can be Id of Element that should contain Editor instance or the element itself..\r\n    // *config =>  configuration passed t   o Tool constructor\r\n    //TODO: add target validations..;\r\n    constructor(target, config) {\r\n        this.__config = {\r\n            onInspect: undefined,\r\n        };\r\n        \r\n        this.on = (key,callback)=>{\r\n            if(typeof(key) !== \"string\"){\r\n                console.error(\"key must be a string..\");\r\n            }\r\n            if(typeof(callback) !== \"function\"){\r\n                console.error(\"callback must be a function..\");\r\n            }\r\n            EVENTS[key]  = callback;\r\n        };\r\n        this.Connector = new Connector();\r\n        this.modeHandlers = {\r\n            [Modes.Toggle]: (v, key, value, options) => this.onToggle(v, key, value, options),\r\n            [Modes.Extend]: (v, key, value, options) => this.onExtend(v, key, value, options),\r\n        }\r\n        this.config = config ? Object.assign(this.__config, config) : this.__config;\r\n        this.events = {\r\n            styleChanged: this.config.onInspect,\r\n        }\r\n        this.connectedElement = this.Connector.Connect(target, this.config);\r\n    }\r\n    save() {\r\n        return elementToJson(this.connectedElement);\r\n    }\r\n    load(json) {\r\n        return JsonToElement(json, this.connectedElement);\r\n    }\r\n    destroy() {\r\n        this.Connector.Destroy();\r\n        const self = this;\r\n        for (const key in self) {\r\n            this[key] = null;\r\n            delete this[key];\r\n        }\r\n    }\r\n    //TODO: review.\r\n    //TODO: Create normalize..\r\n    //question: if text was selected, should we unwrap the selectiion only ? \r\n    unLink() {\r\n        if (!this.isValid()) {\r\n            return;\r\n        }\r\n        const selection = window.getSelection();\r\n\r\n        if (selection && !selection.toString()) {\r\n            let elementToUnwrap;\r\n            const baseNode = selection.baseNode;\r\n            if (baseNode && baseNode.nodeType === 3 && baseNode.parentElement) {\r\n                elementToUnwrap = baseNode.parentElement;\r\n            }\r\n            if (baseNode && baseNode.nodeType === 1) {\r\n                elementToUnwrap = elementToUnwrap.closest(\"a\");\r\n            }\r\n            if (elementToUnwrap) {\r\n                elementToUnwrap.unwrap();\r\n            }\r\n            return null;\r\n        }\r\n        const linkElements = wrapRangeWithElement();\r\n        Array.from(linkElements).forEach(r => {\r\n            const closestATag = r.closest(\"a\");\r\n            if (closestATag) {\r\n                var a = splitHTML(r, closestATag, {\r\n                    tag: \"a\"\r\n                })\r\n                if (a) {\r\n                    a.center.unwrap();\r\n                }\r\n            }\r\n            Array.from(r.querySelectorAll(\"a\")).forEach(a => {\r\n                a.unwrap();\r\n            });\r\n            r.unwrap();\r\n        });\r\n        const { firstFlag, lastFlag } = setSelectionFlags(linkElements[0], linkElements[linkElements.length - 1]); //Set Flag at last\r\n        setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n    }\r\n    //TODO: review\r\n    //TODO: merge a tags..\r\n    //TODO: remove a childs\r\n    //TODO: move function to Link.service.js\r\n    link(options = {}) {\r\n        if (!options || (options && !options.href) ||  !this.isValid()) {\r\n            return;\r\n        }\r\n     \r\n        if (window.getSelection && !window.getSelection().toString()) {\r\n            console.warn(\"no text selected..\");\r\n            return null;\r\n        }\r\n        const unwrapAtags = (linkElements) => {\r\n            linkElements.forEach(link => {\r\n                Array.from(link.querySelectorAll(\"a\")).forEach(aTag => aTag.unwrap());\r\n                const closestATag = link.parentElement ? link.parentElement.closest(\"a\") : null;\r\n                if (closestATag) {\r\n                    var a = splitHTML(link, closestATag, {\r\n                        tag: \"a\"\r\n                    });\r\n                    if (a) {\r\n                        a.center.unwrap();\r\n                    }\r\n                    // closestATag.unwrap();\r\n                }\r\n            });\r\n        }\r\n        const setTargetToTag = (linkElements, renderedLink, _target) => {\r\n            linkElements.forEach(aTag => {\r\n                aTag.href = renderedLink;\r\n                if (_target) {\r\n                    aTag.setAttribute(\"target\", _target);\r\n                }\r\n            });\r\n        }\r\n        const setProtocol = (_protocol, newURL) => {\r\n            _protocol = _protocol.replace(/:/g, \"\");\r\n            _protocol = _protocol.replace(/\\/\\//g, \"\");\r\n            _protocol += \":\";\r\n            if (_protocol.includes(\"http\")) {\r\n                _protocol += \"//\";\r\n            } else {\r\n            }\r\n            newURL.push(_protocol);\r\n            return _protocol;\r\n        }\r\n    \r\n\r\n        const { href = \"\", protocol = \"\", target = \"\" } = options;\r\n\r\n        const linkElements = wrapRangeWithElement(\"a\");\r\n        let newURL = [];\r\n        const Atag = createTempLinkElement(href);\r\n        let _href = resetURL(href.trim());\r\n\r\n        let _protocol = protocol.trim() || Atag.protocol;\r\n        let _target = null;\r\n        const testTarget = TARGETS[target.trim().toLowerCase()];\r\n        if (testTarget) {\r\n            _target = testTarget;\r\n        }\r\n        if (_protocol.trim()) {\r\n            _protocol = setProtocol(_protocol, newURL);\r\n        }\r\n        if (_href) {\r\n            newURL.push(_href);\r\n        }\r\n        const renderedLink = newURL.join(\"\");\r\n        unwrapAtags(linkElements);\r\n        setTargetToTag(linkElements, renderedLink, _target);\r\n        const { firstFlag, lastFlag } = setSelectionFlags(linkElements[0], linkElements[linkElements.length - 1]); //Set Flag at last\r\n        setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n        \r\n        normalizeElement(this.connectedElement);// merge siblings and parents with child as possible.. \r\n    }\r\n    //TODO: review\r\n    //question : we want to handle and toggle any attribute ? \r\n    toggleClass(className, options) {\r\n        //here\r\n        if (!this.isValid()) {\r\n            return;\r\n        }\r\n        if (typeof (className) !== \"string\") {\r\n            console.warn(\"className must be a string..\");\r\n            return null;\r\n        }\r\n\r\n        const elements = wrapRangeWithElement();\r\n        if (elements.length === 0) {\r\n            return;\r\n        }\r\n        if (!options) options = {};\r\n        if (typeof (options.selection) !== \"boolean\") options.selection = true;\r\n        const isToggleOn = (typeof (options.isON) === \"boolean\") ? options.isON : elements[0].closest(`[class='${className}']`);\r\n        if (!isToggleOn) {\r\n            elements.forEach(el => el.classList.add(className));\r\n        } else {\r\n            elements.forEach(el => {\r\n                if (el.parentElement) {\r\n                    const closestClass = el.parentElement.closest(`[class='${className}']`);\r\n                    if (closestClass) {\r\n                        const split = splitHTML(el, closestClass);\r\n                        if (split) {\r\n                            split.center.removeClassName(className);\r\n                        }\r\n                    }\r\n                } else {\r\n                    el.removeClassName(className);\r\n                }\r\n            })\r\n        }\r\n        const { firstFlag, lastFlag } = options.selection ? setSelectionFlags(elements[0], elements[elements.length - 1]) : { firstFlag: null, lastFlag: null }; //Set Flag at last\r\n        normalizeElement(this.connectedElement);// merge siblings and parents with child as possible..\r\n        if (firstFlag && lastFlag) {\r\n            setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n        } else {\r\n            const sel = window.getSelection();\r\n            if (sel.removeAllRanges) {\r\n                sel.removeAllRanges();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @param {String} key - key of css \r\n    *  @param {String} value - value of css\r\n    *  @param {(Object | String)} Modes - mode from Modes => Extend or Toggle\r\n    *  @param {string} Modes.Extend - override style\r\n    *  @param {string} Modes.toggle - toggle style\r\n    *  @param {Object} [options] - options \r\n    */\r\n    execCmd(key, value, mode, options) {\r\n        if (!this.isValid() || !this.isVAlidKeyValue(key, value)) {\r\n            return;\r\n        }\r\n        this.connectedElement.normalize();\r\n        this.ELEMENTS = [];\r\n        mode = mode ? mode : Modes.Extend;\r\n        if (!options) options = {};\r\n        if (typeof (options.selection) !== \"boolean\") options.selection = true;\r\n   \r\n\r\n        //==============review===============//\r\n        this.ELEMENTS = wrapRangeWithElement();\r\n        if (!options.selection) {\r\n            const lastNode = this.ELEMENTS[this.ELEMENTS.length - 1];\r\n            if (lastNode)\r\n                this.caretHolder = this.createCaretPlacement(lastNode);\r\n        }\r\n\r\n        if (options.unWrap && Array.isArray(options.unWrap)) {\r\n            options.unWrap.forEach(selector => {\r\n                this.ELEMENTS.forEach(txtNode => {\r\n                    const closestElementToUnWrap = txtNode.closest(selector);\r\n                    if (closestElementToUnWrap) {\r\n                        closestElementToUnWrap.unwrap();\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        //This is how i make the text selection, i dont know if this is good way, but it works..\r\n        const { firstFlag, lastFlag } = options.selection ? setSelectionFlags(this.ELEMENTS[0], this.ELEMENTS[this.ELEMENTS.length - 1]) : { firstFlag: null, lastFlag: null }; //Set Flag at last\r\n        //======================================================================//\r\n        removeZeroSpace(getTextNodes(this.connectedElement));\r\n\r\n        let ToggleMode;//Declare toggle mode, The first element determines whether it is on or off\r\n\r\n        this.ELEMENTS.forEach((element, i) => {\r\n            options.onOff = ToggleMode;\r\n            const result = this.modeHandlers[mode](element, key, value, options);\r\n            if (mode === Modes.Toggle && typeof (ToggleMode) === 'undefined')\r\n                ToggleMode = result;\r\n        });\r\n        normalizeElement(this.connectedElement);// merge siblings and parents with child as possible.. \r\n        //use the first and last flags to make the text selection and unwrap them..\r\n        if (firstFlag && lastFlag) {\r\n            setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n        } else {\r\n            const sel = window.getSelection();\r\n            if (sel.removeAllRanges) {\r\n                sel.removeAllRanges();\r\n            }\r\n            if (this.caretHolder) {\r\n                setCaretAt(this.caretHolder, this.caretHolder.textContent.length);\r\n                this.caretHolder.unwrap();\r\n                this.caretHolder = null;\r\n            }\r\n        }\r\n        const collectedStyles =  collectStyleFromSelectedElement(this.connectedElement);\r\n        if(typeof (EVENTS[\"inspect\"]) === \"function\"){\r\n            EVENTS[\"inspect\"](collectedStyles);\r\n        }\r\n        this.dispatchEvent('styleChanged', collectedStyles);\r\n    }\r\n    createCaretPlacement(atNode) {\r\n        if (!atNode) return null;\r\n        const caretHolder = document.createElement('text-selection');\r\n        caretHolder.setAttribute('zero-space', 'true');\r\n        atNode.appendChild(caretHolder);\r\n        return caretHolder;\r\n    }\r\n\r\n    dispatchEvent(event, payload) {\r\n        if (this.events[event])\r\n            this.events[event](payload);\r\n    }\r\n    onToggle(element, key, value, options) {\r\n        if (options.target === \"block\") {\r\n            this.createBlockStyle(options, element, key, value);\r\n        } else {\r\n            // detect if there is any parent with style to split.\r\n            //TODO: use the catch from options to detect more than one style or tag element.\r\n            let elementToSplit = element.closest(`[style*='${value}']`);\r\n            if (elementToSplit && window.getComputedStyle(elementToSplit).display === \"block\") {\r\n                let innerSpan = createInnerWrapperElement(elementToSplit);\r\n                elementToSplit.style[key] = null;\r\n                innerSpan.style[key] = value;\r\n                options.onOff = false;\r\n                return this.onToggle(element, key, value, options);\r\n            }\r\n            if (elementToSplit && elementToSplit !== element) {\r\n                if (typeof (options.onOff) === 'undefined')\r\n                    options.onOff = false;\r\n                //unbold\r\n                const splitElements = splitHTML(element, elementToSplit);\r\n                // if there is no split elements, its error!\r\n                if (splitElements) {\r\n                    toggleStyle(splitElements.center, key, value, options.onOff);\r\n                } else {\r\n                    console.error('splitHTML return null');\r\n                }\r\n            }\r\n            else {\r\n                if (typeof (options.onOff) === 'undefined' && elementToSplit) {\r\n                    options.onOff = false;\r\n                } else if (typeof (options.onOff) === 'undefined') {\r\n                    options.onOff = true;\r\n                }\r\n                toggleStyle(element, key, value, options.onOff);\r\n                normalizeElement(element);\r\n            }\r\n\r\n            return options.onOff;\r\n        }\r\n\r\n    }\r\n    onExtend(element, key, value, options) {\r\n        if (options.target === \"block\") {\r\n            this.createBlockStyle(options, element, key, value);\r\n        } else {\r\n            const elementToSplit = element.closest(`[style*='${key}']`);\r\n            if (elementToSplit) {\r\n                const splitBlocks = splitHTML(element, elementToSplit);\r\n                if (splitBlocks) {\r\n                    setStyle(splitBlocks.center, key, value);\r\n                }\r\n                else if (options.target === \"block\") {\r\n                    elementToSplit.style[key] = value;\r\n                }\r\n                else if (options.target !== \"block\") {\r\n                    let innerSpan = createInnerWrapperElement(elementToSplit, { el: 'span' });\r\n                    setStyle(innerSpan, key, value);\r\n                    elementToSplit.style[key] = null;\r\n                    return this.onExtend(element, key, value);\r\n\r\n                }\r\n                else if (elementToSplit !== element) {\r\n                    const splitElements = splitHTML(element, elementToSplit);\r\n                    if (splitElements) {\r\n                        setStyle(splitElements.center, key, value);\r\n                    } else {\r\n                        console.error('splitHTML return null');\r\n                    }\r\n                }\r\n\r\n            } else if (window.getComputedStyle(element).display !== \"block\" && options.target === \"block\") {\r\n                const blockElement = GetClosestBlockElement(element);\r\n                if (blockElement && blockElement.ischildOf(this.connectedElement)) {\r\n                    setStyle(parentElement, key, value);\r\n                } else {\r\n                    const wrapper = document.createElement(\"div\");\r\n                    parentElement.wrap(wrapper);\r\n                    setStyle(wrapper, key, value);\r\n                }\r\n            } else {\r\n                setStyle(element, key, value);\r\n            }\r\n        }\r\n\r\n    }\r\n    createBlockStyle(options, element, key, value) {\r\n        const findBlock = (element) => {\r\n            const computed = window.getComputedStyle(element);\r\n            if (computed && computed.display === \"block\") {\r\n                return element;\r\n            } else if (element.parentNode && element.parentNode !== this.connectedElement) {\r\n                return findBlock(element.parentNode);\r\n            }\r\n        };\r\n        if (options.as === \"inline\") {\r\n            let blockElement = findBlock(element);\r\n            if (blockElement) {\r\n                const wrapTextNodeWithAppendStyle = (node) => {\r\n                    const span = document.createElement(\"span\");\r\n                    span.style[key] = value;\r\n                    node.wrap(span);\r\n                };\r\n                const createInlineStyle = (parentNode) => {\r\n                    parentNode.style[key] = null;\r\n                    Array.from(parentNode.childNodes).forEach(node => {\r\n                        if (node.nodeType === 3) {\r\n                            wrapTextNodeWithAppendStyle(node);\r\n                        } else if (node.nodeType === 1 && node.nodeName !== \"BR\") {\r\n                            const computed = window.getComputedStyle(node);\r\n                            if (computed.display !== \"inline\") {\r\n                                createInlineStyle(node);\r\n                            } else {\r\n                                node.style[key] = value;\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n                createInlineStyle(blockElement);\r\n                // Array.from(blockElement.querySelectorAll(\"span\")).forEach(el=>el.style[key] = value);\r\n            } else {\r\n                this.createBlockElAndStyleIt(key, value, element);\r\n            }\r\n\r\n        } else {\r\n            let blockElement = findBlock(element);\r\n            if (blockElement) {\r\n                blockElement.style[key] = value;\r\n                Array.from(blockElement.querySelectorAll(`[style*='${key}']`)).forEach(el => el.style[key] = null);\r\n            } else {\r\n                this.createBlockElAndStyleIt(key, value, element);\r\n            }\r\n        }\r\n    }\r\n\r\n    createBlockElAndStyleIt(key, value, element) {\r\n        const pargh = document.createElement(\"p\");\r\n        pargh.style[key] = value;\r\n        element.wrap(pargh);\r\n    }\r\n    isVAlidKeyValue(key,value){\r\n        return !!(typeof key === \"string\" && typeof value === \"string\"); \r\n    }\r\n    isValid() {\r\n        if (!this.connectedElement) {\r\n            console.error('please create new instance..')\r\n            return false;\r\n        };\r\n        if (this.connectedElement.contentEditable !== \"true\") {\r\n            return false;\r\n        }\r\n        var selectedElement = getSelectedElement();\r\n        if (selectedElement && (selectedElement.ischildOf(this.connectedElement) || selectedElement === this.connectedElement)) {\r\n            return true;\r\n        }\r\n        ;\r\n    }\r\n}","import Core from './StyleIt/index';\r\nimport  MODES  from './StyleIt/constants/Modes.json';\r\n\r\nexport default class StyleIt {\r\n  //expose only the relevant methods..\r\n  constructor(target, config) {\r\n    //TODO: validate target & config..\r\n    const styleIt = new Core(target, config);\r\n    if (styleIt) {  \r\n      this.execCmd = styleIt.execCmd;\r\n      this.toggleClass = styleIt.toggleClass;\r\n      this.link = styleIt.link;\r\n      this.unLink = styleIt.unLink;\r\n      this.save = styleIt.save;\r\n      this.load = styleIt.load;\r\n      this.destroy = styleIt.destroy;\r\n      this.on = styleIt.on;\r\n      this.MODES = MODES;\r\n      //========================================//\r\n      this.toggleClass = this.toggleClass.bind(styleIt);\r\n      this.execCmd = this.execCmd.bind(styleIt);\r\n      this.on = this.on.bind(this);\r\n      this.link = this.link.bind(styleIt);\r\n      this.unLink = this.unLink.bind(styleIt);\r\n      this.save = this.save.bind(styleIt);\r\n      this.load = this.load.bind(styleIt);\r\n      this.destroy = this.destroy.bind(styleIt);\r\n    }\r\n  }\r\n}"],"sourceRoot":""}