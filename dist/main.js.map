{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./src/StyleIt/components/custom/textSelected.js","webpack:///./src/StyleIt/services/className.service.js","webpack:///./src/StyleIt/utilis/DomUtilis.js","webpack:///./src/StyleIt/services/attr.service.js","webpack:///./src/StyleIt/utilis/splitHTML.js","webpack:///./src/StyleIt/utilis/merger.js","webpack:///./src/StyleIt/services/textEditor.service.js","webpack:///./src/StyleIt/services/style.service.js","webpack:///./src/StyleIt/rules/rules.js","webpack:///./src/StyleIt/services/elements.service.js","webpack:///./src/StyleIt/services/range.service.js","webpack:///./src/StyleIt/services/copyPaste/copyPaste.service.js","webpack:///./src/StyleIt/services/events/events.js","webpack:///./src/StyleIt/services/link.service.js","webpack:///./src/StyleIt/services/Inspector/Inspector.service.js","webpack:///./src/StyleIt/services/keyPress/KeyPress.js","webpack:///./src/StyleIt/connector.js","webpack:///./src/StyleIt/index.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","default","TextSelection","getAttribute","innerHTML","HTMLElement","customElements","getInheirtClassNames","fromElement","toElement","classes","_parent","ischildOf","parentElement","map","classList","Array","from","forEach","findIndex","push","getClasses","element","normalizeClassName","removeEmptyClass","className","removeAttribute","querySelectorAll","concat","child","node","remove","clear","Element","removeClassName","obj","e","nodeType","style","ownerDocument","el","wrapper","elements","parents","isArray","parentNode","filter","_","length","insertBefore","_el","appendChild","Document","getSelectedElement","document","getSelection","anchorNode","wrap","createElement","createSelection","body","createTextRange","range","moveToElementText","select","window","selection","createRange","selectNodeContents","removeAllRanges","addRange","parent","_wrap","getInheirtAttributes","attributes","currectElement","attrs","getAttributes","getAll","splitHTML","options","tag","DomUtilis","isElement","setAttrs","styles","getInheirtCss","template","join","attr","setAttribute","centerElement","centerTemplate","sel","getRangeAt","setStart","leftElement","leftTemplate","leftRange","extractContents","setEnd","childNodes","rightElement","rightTemplate","rightRange","split","left","center","right","unwrap","Text","insertAfter","newNode","nextSibling","replaceNode","replacementNode","extraContents","mergeNodeContect","nodeName","Node","ELEMENT_NODE","firstChild","firstElementChild","textContent","_elementProps","getStyle","styleValue","trim","normalizeStyle","attrValue","add","normalizeElement","mergeTwoNodes","elementOne","elementTwo","_elementsData","commoncLasses","classes1","classes2","c1","c2","includes","commonStyles","style1","style2","commmonStyles","style1Values","style2Values","clearElementClasses","clearElementStyles","children","recurse","_normalize","mergeNodesStyles","merged","nextElement","mergeNodesContent","mergedContent","normalize","unwrapped","intailStyle","toggleStyle","isOn","replace","setStyle","data","textDecoration","closest","splits","rule","collectStyleFromSelectedElement","connectecElement","collectStyles","keyValue","ancNode","focusNode","JsonToElement","jsonObject","createHtmlElement","jsElement","isShouldRenderAttrs","createTextNode","href","target","collectedStyle","JsonObjectToStyleString","renderAttrs","type","Levels","jsChild","htmlElement","elementToJson","level","json","isValid","keys","cn","v","createInnerWrapperElement","innerSpan","GetClosestBlockElement","getComputedStyle","display","wrapRangeWithElement","wrapTag","ranges","rangeCount","getRanges","wrapperEl","wrapNode","isCollapsed","startNode","startContainer","endNode","endContainer","startOffset","endOffset","currentRange","currentWrapper","cloneNode","surroundContents","createWrapperFunction","getRangeTextNodes","wrapRangeText","flat","getTextNodes","walker","createTreeWalker","NodeFilter","SHOW_TEXT","textNodes","nextNode","rangeIntersectsNode","intersectsNode","rangeA","rangeB","selectNode","createRangeFromNode","compareBoundaryPoints","Range","END_TO_START","START_TO_END","container","commonAncestorContainer","isNonEmptyTextNode","setSelectionBetweenTwoNodes","firstFlag","lastFlag","_options","assign","setBaseAndExtent","setSelectionFlags","firstElement","LastElement","prepend","CopyPaste","stylesToPaste","onCopy","onPaste","paste","copy","start","event","html","len","cloneContents","htmlText","clipboardData","setData","pasteWithStyles","pastePlainText","preventDefault","content","getData","execCommand","textContentContainer","HtmlContainer","innerText","htmlNodes","callback","span","collectedStyles","replaced","outerHTML","error","removeChild","addEventListener","removeEventListener","EVENTS","TARGETS","_blank","_self","_top","resetURL","src","createTempLinkElement","Atag","Inpsector","onInspect","launchInspect","selectedElement","aTag","protocol","onKeyDown","keyCode","onClick","Destroy","KeyPress","keypress","shiftKey","contenteditable","contentEditable","deleteContents","lastNode","frag","createDocumentFragment","insertNode","cloneRange","setStartAfter","collapse","pasteHtmlAtCaret","Connector","getElementById","renderedElement","Promise","resolve","then","RenderInnerHTML","plugins","copyPaste","inspector","keyPress","usePlugins","Core","config","__config","undefined","on","modeHandlers","Modes","Toggle","onToggle","Extend","onExtend","events","styleChanged","connectedElement","Connect","toString","elementToUnwrap","baseNode","linkElements","closestATag","a","setProtocol","_protocol","newURL","_href","_target","testTarget","toLowerCase","renderedLink","link","isON","closestClass","isVAlidKeyValue","ELEMENTS","caretHolder","createCaretPlacement","unWrap","selector","txtNode","closestElementToUnWrap","ToggleMode","TEXT_NODE","onOff","result","charIndex","focus","textNode","setCaretAt","dispatchEvent","atNode","payload","elementToSplit","splitElements","createBlockStyle","splitBlocks","blockElement","findBlock","computed","as","createInlineStyle","wrapTextNodeWithAppendStyle","createBlockElAndStyleIt","pargh","StyleIt","styleIt","execCmd","toggleClass","unLink","save","load","destroy","MODES"],"mappings":"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","file":"styleit-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"styleit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"styleit\"] = factory();\n\telse\n\t\troot[\"styleit\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require('./src').default;\r\n","\r\nclass TextSelection extends HTMLElement {\r\n    constructor(props) {\r\n      super();\r\n    }\r\n    connectedCallback(){\r\n      const createZeroSpace = this.getAttribute('zero-space');\r\n      if(createZeroSpace === \"true\"){\r\n        this.innerHTML = \"&#8203;\";\r\n\r\n      }\r\n    }\r\n  }\r\n  customElements.define('text-selection', TextSelection); ","\r\nexport function getInheirtClassNames(fromElement, toElement) {\r\n    var classes = [];\r\n    var _parent = fromElement;\r\n    while (_parent && _parent.ischildOf(toElement.parentElement)) {\r\n        let map = _parent.classList;\r\n        Array.from(map).forEach(name => {\r\n            if (classes.findIndex(c => c === name) < 0) {\r\n                classes.push(name);\r\n            }\r\n        })\r\n        _parent = _parent.parentElement;\r\n    }\r\n    return classes;\r\n}\r\nexport function getClasses(element) {\r\n    return Array.from(element.classList);\r\n}\r\n\r\n//TODO: review\r\n//question: is expensive too much? \r\nexport function normalizeClassName(element) {\r\n    function removeEmptyClass(element){\r\n        if (!element.className) {\r\n            element.removeAttribute('class');\r\n        }\r\n    }\r\n    function clear(element) {\r\n        removeEmptyClass(element);\r\n        Array.from(element.classList).forEach(c => {\r\n            Array.from(element.querySelectorAll(`[class='${c}']`)).forEach(node =>{\r\n                node.classList.remove(c)\r\n                removeEmptyClass(node)\r\n            });\r\n        })\r\n    }\r\n    \r\n    const elements = Array.from(element.querySelectorAll('span[class]')).concat(element);\r\n    elements.forEach(child => clear(child));\r\n}\r\n//TODO: review\r\n//question: how about this name ? \r\nElement.prototype.removeClassName = function(className){\r\nconst nodes = Array.from(this.querySelectorAll(`[class='${className}']`)).concat(this);\r\nnodes.forEach(node=>node.classList.remove(className));\r\n}","class DomUtilis {\r\n\r\n\r\n  isElement(obj) {\r\n    try {\r\n      return obj instanceof HTMLElement;\r\n    }\r\n    catch (e) {\r\n      return (typeof obj === \"object\") &&\r\n        (obj.nodeType === 1) && (typeof obj.style === \"object\") &&\r\n        (typeof obj.ownerDocument === \"object\");\r\n    }\r\n  }\r\n  \r\n  wrap(el, wrapper) {\r\n    //el should be array\r\n    let elements = [];\r\n    if (Array.isArray(el)) {\r\n      elements = el;\r\n    } else {\r\n      elements = [el];\r\n    }\r\n\r\n    const parents = elements.map(e => e.parentNode);\r\n    var parentsDiff = parents.filter((p, _, self) => { return self[0] !== p });\r\n    if (parentsDiff.length !== 0) {\r\n      console.log(`[wrap] found ${parentsDiff.length} different parents 😅`);\r\n      return;\r\n    }\r\n    parents[0].insertBefore(wrapper, elements[0])\r\n    elements.forEach(_el => wrapper.appendChild(_el))\r\n\r\n    return true;\r\n  }\r\n}\r\nexport default new DomUtilis(); \r\n\r\nDocument.prototype.getSelectedElement=function(){var e=document.getSelection();if(null!==e){var t=e.anchorNode;if(null!==t){for(;3===t.nodeType;)t=t.parentNode;return t}return null}}\r\nElement.prototype.wrap = ( wrapper) => {\r\n  if (typeof wrapper === \"string\") wrapper = document.createElement(wrapper);\r\n  this.parentNode.insertBefore(wrapper, this);\r\n  wrapper.appendChild(this);\r\n  return wrapper;\r\n}\r\nElement.prototype.createSelection = function() {\r\n  if (document.body.createTextRange) {\r\n    const range = document.body.createTextRange();\r\n    range.moveToElementText(this);\r\n    range.select();\r\n  } else if (window.getSelection) {\r\n    const selection = window.getSelection();\r\n    const range = document.createRange();\r\n    range.selectNodeContents(this);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n  } \r\n}\r\nElement.prototype.ischildOf = function(parent) {\r\n  if (!parent) return false;\r\n  let node = this.parentNode;\r\n  while (node != null) {\r\n    if (node === parent) {\r\n      return true;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n  return false;\r\n}\r\nconst _wrap = function(wrapper) {\r\n  if (!this.parentNode) return false;\r\n  this.parentNode.insertBefore(wrapper, this);\r\n  wrapper.appendChild(this);\r\n  return wrapper;\r\n}\r\nText.prototype.wrap = _wrap;\r\nElement.prototype.wrap = _wrap;\r\nElement.prototype.insertAfter = function (newNode) {\r\n  this.parentNode.insertBefore(newNode, this.nextSibling);\r\n}\r\nElement.prototype.replaceNode = function(replacementNode) {\r\n  if (this.parentNode) {\r\n    this.parentNode.insertBefore(replacementNode, this)\r\n    this.remove();\r\n    return replacementNode;\r\n  }\r\n}\r\nElement.prototype.unwrap = function() {\r\n  var range = document.createRange()\r\n  range.selectNodeContents(this)\r\n  var extraContents = range.extractContents();\r\n  this.replaceNode(extraContents)\r\n  return extraContents;\r\n}\r\n","\r\n\r\n//class and style not includes yet..\r\nexport function getInheirtAttributes(fromElement, toElement) {\r\n    var attributes = {};\r\n    var currectElement = fromElement;\r\n    while (currectElement && currectElement.ischildOf(toElement.parentElement)) {\r\n        var attrs = currectElement.attributes;\r\n        for(var i = attrs.length - 1; i >= 0; i--) {\r\n            if(attrs[i].name  !==\"class\" && attrs[i].name  !== \"style\"){\r\n                if(!attributes[attrs[i].name ]){\r\n                    attributes[attrs[i].name ] = attrs[i].value;\r\n                }\r\n            }\r\n          }\r\n      currectElement = currectElement.parentElement;\r\n    }\r\n    return attributes;\r\n  }\r\n  export function getAttributes(element,getAll){\r\n    var attributes = {};\r\n    var attrs = element.attributes;\r\n    for(var i = attrs.length - 1; i >= 0; i--) {\r\n        if(getAll  || (!getAll && attrs[i].name  !==\"class\" && attrs[i].name  !== \"style\")){\r\n            if(!attributes[attrs[i].name ]){\r\n                attributes[attrs[i].name ] = attrs[i].value;\r\n            }\r\n        }\r\n      }\r\n      return attributes;\r\n  }\r\n  export function removeAllAttrs(element){\r\n      if(element && !element.attributes){\r\n          console.error(\"element not have attributes..\");\r\n          return null;\r\n      }\r\n    Array.from(element.attributes).forEach(attr=>element.removeAttribute(attr.nodeName))\r\n  }","import DomUtilis from \"./DomUtilis\"\r\nimport { getInheirtCss } from \"../services/style.service\";\r\nimport { getInheirtAttributes } from \"../services/attr.service\";\r\nimport { getInheirtClassNames } from \"../services/className.service\";\r\n\r\n\r\nexport function splitHTML(fromElement, toElement,options = {}) {\r\n    const {tag = \"span\"} = options;\r\n    if (!fromElement.ischildOf(toElement)) {\r\n        console.error('fromElement must be child of toElement')\r\n        return null;\r\n    }\r\n    if (!DomUtilis.isElement(fromElement) || !DomUtilis.isElement(toElement)) {\r\n        console.error('fromElement && toElement must be dom elements..');\r\n        return null;\r\n    }\r\n    const setAttrs = (fromElement, toElement) => {\r\n        const styles = getInheirtCss(fromElement, toElement);\r\n        const attrs = getInheirtAttributes(fromElement, toElement);\r\n        const className = getInheirtClassNames(fromElement, toElement);\r\n        const template = document.createElement(tag);\r\n        template.className = className.join(\" \");\r\n        for (const style in styles) {\r\n            const value = styles[style];\r\n            template.style[style] = value;\r\n        }\r\n        for (const attr in attrs) {\r\n            const value = attrs[attr];\r\n            template.setAttribute(attr, value);\r\n        }\r\n        return template;\r\n    }\r\n    fromElement.createSelection();\r\n    const centerElement = document.getSelectedElement();\r\n    const centerTemplate = setAttrs(centerElement, toElement);\r\n    //center\r\n    centerTemplate.appendChild(fromElement);\r\n    var sel = window.getSelection();\r\n    var range = sel.getRangeAt(0);\r\n    //left\r\n    range.setStart(toElement, 0);\r\n    const leftElement = document.getSelectedElement();\r\n    const leftTemplate = setAttrs(leftElement, toElement);\r\n    var leftRange = range.extractContents();\r\n    leftTemplate.appendChild(leftRange);\r\n    //right\r\n    range.setEnd(toElement, toElement.childNodes.length);\r\n    const rightElement = document.getSelectedElement();\r\n    const rightTemplate = setAttrs(rightElement, toElement);\r\n    var rightRange = range.extractContents();\r\n    rightTemplate.appendChild(rightRange);\r\n    const split = {\r\n        left: leftTemplate,\r\n        center: centerTemplate,\r\n        right: rightTemplate\r\n    }\r\n    toElement.innerHTML = \"\";\r\n    for (const el in split) {\r\n        const element = split[el];\r\n        toElement.appendChild(element);\r\n    }\r\n    toElement.unwrap();\r\n    return split;\r\n\r\n}","import DomUtilis from \"./DomUtilis\"\r\nimport { getStyle, normalizeStyle } from \"../services/style.service\";\r\nimport { getClasses, normalizeClassName } from \"../services/className.service\";\r\nimport { getAttributes } from \"../services/attr.service\";\r\nimport { normalizeElement } from \"../services/textEditor.service\";\r\nimport Config from '../_app.config.json';\r\n\r\n\r\n\r\n/**\r\n *  * Returns the new merge element\r\n * @param {Element} DomElement - element to merge with his first child\r\n */\r\nexport const mergeNodeContect = node => {\r\n\r\n    if (!DomUtilis.isElement(node)) {\r\n        console.error('one of the props is not dom element.., please insert two element to merge..');\r\n        return null;\r\n    }\r\n    if (node.nodeName !== \"SPAN\" || node.nodeType !== Node.ELEMENT_NODE) {\r\n        console.error('[mergeNodeContect] node is not a span');\r\n        return null;\r\n    }\r\n\r\n    const firstChild = node.firstElementChild;\r\n    if (!firstChild) {\r\n        console.error('[mergeNodeContect] first child not found');\r\n        return null;\r\n    }\r\n    if (firstChild.nodeName !== \"SPAN\" || firstChild.nodeType !== Node.ELEMENT_NODE) {\r\n        console.error('[mergeNodeContect] firstChild is not a span');\r\n        return null;\r\n    }\r\n    if (node.textContent !== firstChild.textContent) {\r\n        console.error('[mergeNodeContect] text content is different');\r\n        return null;\r\n    }\r\n    const _elementProps = {\r\n        style: getStyle(node),\r\n        classes: getClasses(node),\r\n        attrs: getAttributes(node)\r\n    }\r\n    for (const style in _elementProps.style) {\r\n        const styleValue = _elementProps.style[style];\r\n        firstChild.style[style] = (firstChild.style[style] + \" \" + styleValue).trim();\r\n    }\r\n    normalizeStyle(firstChild);\r\n\r\n    for (const attr in _elementProps.attrs) {\r\n        const attrValue = _elementProps.attrs[attr];\r\n        firstChild.setAttribute(attr, attrValue);\r\n    }\r\n    firstChild.classList.add(..._elementProps.classes);\r\n    normalizeClassName(firstChild);\r\n    normalizeElement(firstChild);\r\n    if(firstChild.parentElement)\r\n    firstChild.parentElement.unwrap();\r\n    return firstChild;\r\n};\r\nexport function mergeTwoNodes(elementOne, elementTwo) {\r\n    console.log('[mergeTwoNodes] START');\r\n    if (!DomUtilis.isElement(elementOne) || !DomUtilis.isElement(elementTwo)) {\r\n        console.error('one of the props is not dom element.., please insert two element to merge..');\r\n        return null;\r\n    }\r\n    if (elementOne.nodeName !== \"SPAN\" || elementTwo.nodeName !== \"SPAN\") {\r\n        console.error('one of the props is not dom element.., please insert two element to merge..');\r\n        return null;\r\n    }\r\n    const _elementsData = [{\r\n        style: getStyle(elementOne),\r\n        classes: getClasses(elementOne),\r\n        attrs: getAttributes(elementOne)\r\n    },\r\n    {\r\n        style: getStyle(elementTwo),\r\n        classes: getClasses(elementTwo),\r\n        attrs: getAttributes(elementTwo)\r\n    }]\r\n    const getCommonClasses = (classes1, classes2) => {\r\n        if (!classes1 || !classes2)\r\n            return [];\r\n        const c1 = [...classes1];\r\n        const c2 = [...classes2];\r\n        return c1.filter(c => c2.includes(c));\r\n    }\r\n    const getCommonStyles = (style1, style2) => {\r\n        const commmonStyles = {};\r\n        for (const s in style1) {\r\n            if (!style2[s])\r\n                continue;\r\n\r\n            const style1Values = style1[s];\r\n            const style2Values = style2[s];\r\n            if (style2Values === style1Values) {\r\n                commmonStyles[s] = style2Values;\r\n            }\r\n        }\r\n        return commmonStyles;\r\n    };\r\n    const commoncLasses = getCommonClasses(_elementsData[0].classes, _elementsData[1].classes);\r\n    console.log('commonClassses',commoncLasses,elementOne,elementTwo,_elementsData)\r\n\r\n    const commonStyles = getCommonStyles(_elementsData[0].style, _elementsData[1].style);\r\n    const buildWrappingElement = (commonStyles, commoncLasses) => {\r\n        const wrapper = document.createElement('span');\r\n        // handle styles\r\n        for (const s in commonStyles)\r\n            wrapper.style[s] = commonStyles[s];\r\n            \r\n\r\n        // handle classes\r\n        if (commoncLasses.length > 0) {\r\n            wrapper.classList.add(...commoncLasses);\r\n        }\r\n        if (wrapper.attributes.length === 0) {\r\n            wrapper.unwrap();\r\n            return null;\r\n        }\r\n        return wrapper;\r\n    }\r\n    const wrapper = buildWrappingElement(commonStyles, commoncLasses);\r\n    if (!wrapper) {\r\n        console.error('wrapper is null')\r\n        return null;\r\n    }\r\n\r\n    const clearElementClasses = (node, commoncLasses) => {\r\n        node.classList.remove(...commoncLasses);\r\n        normalizeClassName(node);\r\n    }\r\n    const clearElementStyles = (node, commonStyles) => {\r\n        for (const s in commonStyles)\r\n            node.style[s] = null;\r\n    }\r\n    const elements = [elementOne, elementTwo];\r\n    elements.forEach(e => {\r\n        clearElementClasses(e, commoncLasses);\r\n        clearElementStyles(e, commonStyles);\r\n    })\r\n\r\n    DomUtilis.wrap(elements, wrapper);\r\n    [...wrapper.children].forEach(c => {\r\n        normalizeElement(c)\r\n    })\r\n    return wrapper;\r\n};\r\n\r\n\r\nexport function mergeCommonValuesObject(obj1, obj2) {\r\n    let commonValues = {};\r\n    for (const key in obj1) {\r\n        if (obj2[key] && obj2[key] === obj1[key]) {\r\n            commonValues[key] = obj1[key]\r\n        }\r\n    }\r\n    return commonValues;\r\n}\r\n\r\nexport function mergeCommonArrays(arr1, arr2) {\r\n    const mergeArr = [];\r\n    Array.from(arr1).forEach(item => {\r\n        if (arr2.findIndex(i => i === item) > 0) {\r\n            mergeArr.push(item);\r\n        }\r\n    })\r\n    return mergeArr;\r\n}","import { normalizeClassName } from \"./className.service\";\r\nimport { normalizeStyle } from \"./style.service\";\r\nimport { mergeNodeContect, mergeTwoNodes } from \"../utilis/merger\";\r\n\r\n/**\r\n * @param {Element} DomElement - element to normalize\r\n */\r\nexport function normalizeElement(el) {\r\n    const recurse = (element) => {\r\n        Array.from(element.children).forEach((child) => {\r\n            recurse(child);\r\n            _normalize(child);\r\n        })\r\n        const mergeNodesStyles = element => {\r\n            let merged = false;\r\n            Array.from(element.children).forEach((element) => {\r\n                let wrapper = element;\r\n                while (wrapper !== null) {\r\n                    const nextElement = wrapper.nextSibling;\r\n                    if (!nextElement)\r\n                        break;\r\n                    wrapper = mergeTwoNodes(wrapper, nextElement);\r\n                    merged = merged || wrapper !== null;\r\n                }\r\n            })\r\n            return merged;\r\n        }\r\n\r\n        const mergeNodesContent = element => {\r\n            let merged = false;\r\n            Array.from(element.children).forEach((child) => {\r\n                let wrapper = child;\r\n                while (wrapper !== null) {\r\n                    wrapper = mergeNodeContect(wrapper);\r\n                    merged = merged || wrapper !== null;\r\n                }\r\n            })\r\n            return merged;\r\n        }\r\n        let mergedStyles = false;\r\n        let mergedContent = false;\r\n        do {\r\n            _normalize(element);\r\n            mergedStyles = mergeNodesStyles(element);\r\n            mergedContent = mergeNodesContent(element);\r\n        } while (mergedContent);\r\n    }\r\n    el.normalize();\r\n    recurse(el);\r\n\r\n    function _normalize(element) {\r\n        element.normalize();\r\n        normalizeClassName(element);\r\n        normalizeStyle(element);\r\n        // const tags = [\"STRIKE\", \"EM\", \"I\", \"B\", \"STRONG\", \"U\", \"A\",\"SPAN\"];\r\n        //TODO: normalizr attributes (no:style,className)\r\n        if (element && element.nodeName === \"SPAN\" && (!element.textContent.trim() || element.attributes.length === 0)) {\r\n            const unwrapped = element.unwrap();\r\n            unwrapped.normalize();\r\n            //TODO: check the return;\r\n            return unwrapped.parentElement;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array} textNodes - textnode to remove the zero space like : u200B\r\n */\r\nexport function removeZeroSpace(textNodes) {\r\n    if (!Array.isArray(textNodes)) {\r\n        textNodes = [textNodes];\r\n    }\r\n    textNodes.forEach(el => {\r\n        if (el.nodeType === Node.TEXT_NODE && el.parentElement && el.parentElement.nodeName !== \"TEXT-SELECTION\") {\r\n            el.textContent = el.textContent.replace(/\\u200B/g, '');\r\n        }\r\n    })\r\n}\r\n","import { normalizeClassName } from \"./className.service\";\r\nimport { UseRules } from \"../rules/rules\";\r\nimport { getSelectedElement } from \"./elements.service\";\r\n\r\nexport function getInheirtCss(fromElement, toElement) {\r\n    var intailStyle = {};\r\n    var currectElement = fromElement;\r\n    while (currectElement && currectElement.ischildOf(toElement.parentElement)) {\r\n        let map = getStyle(currectElement);\r\n        for (const style in map) {\r\n            if (map.hasOwnProperty(style)) {\r\n                const value = map[style];\r\n                // text-decoration  could be twice like underline and strike therough.. \r\n                if (!intailStyle[style])\r\n                    intailStyle[style] = value;\r\n            }\r\n        }\r\n        currectElement = currectElement.parentElement;\r\n    }\r\n    return intailStyle;\r\n}\r\nexport function removeStyle(element, key, value) {\r\n    element.style[key] = element.style[key].replace(value, \"\");\r\n    Array.from(element.querySelectorAll(`[style*='${key}']`)).forEach(el => {\r\n        el.style[key] = el.style[key].replace(value, \"\");\r\n    })\r\n}\r\n//TOGGLE\r\nexport function toggleStyle(element, key, value, isOn) {\r\n    if (isOn) {\r\n        element.style[key] = element.style[key] + \" \" + value;\r\n    } else {\r\n        element.style[key] = element.style[key].replace(value, \"\");\r\n    }\r\n    normalizeStyle(element);\r\n    normalizeClassName(element);\r\n    Array.from(element.querySelectorAll(`[style*='${value}']`)).forEach(child => {\r\n        child.style[key] = child.style[key].replace(value, \"\");\r\n        normalizeStyle(child);\r\n        normalizeClassName(child);\r\n    })\r\n}\r\n//EXTEND\r\n//TODO: fix name\r\nexport function setStyles(element, jsonStyle) {\r\n    for (const key in jsonStyle) {\r\n        if (jsonStyle.hasOwnProperty(key)) {\r\n            const style = jsonStyle[key];\r\n            element.style[key] = style;\r\n        }\r\n    }\r\n}\r\n//TOGGLE\r\n//TODO: fix name\r\nexport function setStyle(element, key, value) {\r\n    element.style[key] = value;\r\n    if(key === \"color\"){\r\n        UseRules({element:element,key:'color',value:value});\r\n    }\r\n    Array.from(element.querySelectorAll(`[style*='${key}']`)).forEach(el => {\r\n        el.style[key] = null;\r\n        normalizeStyle(el);\r\n    });\r\n    //experimental: style the text decorations with color..\r\n    //TODO:review\r\n    // UseRules({element:element,key:key,value:value});\r\n}\r\nexport const collectStyleFromSelectedElement = (connectecElement) =>{   \r\n    const selectedElement = getSelectedElement();                \r\n    return getInheirtCss(selectedElement,connectecElement);\r\n}\r\n\r\nexport function normalizeStyle(element) {\r\n    if(!element) return null;\r\n    //TODO:review\r\n    const style = element.getAttribute('style');\r\n    if (!style) {\r\n        element.removeAttribute('style');\r\n    } else {\r\n        const collectStyles = getStyle(element);\r\n        for (const key in collectStyles) {\r\n            if (collectStyles.hasOwnProperty(key)) {\r\n                Array.from(element.querySelectorAll(`[style*='${collectStyles[key]}']`)).forEach(el => {\r\n                    el.style[key] = null;\r\n                    normalizeStyle(el);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function JsonObjectToStyleString(styles) {\r\n    let collectStyles = [];\r\n    for (const key in styles) {\r\n        if (styles.hasOwnProperty(key)) {\r\n            const style = styles[key];\r\n            collectStyles.push(`${key}:${style}`);\r\n        }\r\n    }\r\n    return collectStyles.join(';');\r\n}\r\nexport function getStyle(el) {\r\n    if (!el || !el.style) return {};\r\n    let styles = {};\r\n    let style = el.getAttribute('style');\r\n    if (style) {\r\n        let collectStyles = style.split(';');\r\n        if (Array.isArray(collectStyles)) {\r\n            collectStyles.forEach(style => {\r\n\r\n                const keyValue = style.split(':');\r\n                if (keyValue[1] && keyValue[0])\r\n                    styles[keyValue[0].trim()] = keyValue[1].trim();\r\n            })\r\n        }\r\n\r\n    }\r\n    return styles;\r\n}","import { setStyle, normalizeStyle } from \"../services/style.service\";\r\nimport { splitHTML } from \"../utilis/splitHTML\";\r\nimport { normalizeElement } from \"../services/textEditor.service\";\r\n\r\n//TODO:review\r\nexport function UseRules(data) {\r\n    const ColorTextDecorationRule = (data) => {\r\n        if (data.key === \"color\") {\r\n            const textDecoration = data.element.closest(`[style*='text-decoration']`);\r\n            if (textDecoration) {\r\n                const splits = splitHTML(data.element, textDecoration);\r\n                if (splits) {\r\n                    normalizeStyle();\r\n                    setStyle(splits.center, 'text-decoration-color', `${data.value}`);\r\n                    for (const key in splits) {\r\n                        const element = splits[key];\r\n                        normalizeElement(element);\r\n                    }\r\n                } else {\r\n                    setStyle(textDecoration, 'text-decoration-color', `${data.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const Rules = [\r\n        ColorTextDecorationRule\r\n    ]\r\n    Rules.forEach(rule => rule(data));\r\n}","import { getStyle, JsonObjectToStyleString } from \"./style.service\";\r\nimport Levels from '../constants/Levels.json';\r\n\r\nexport  function walkTheDOM(node, func) {\r\n    if(!node) return null;\r\n    func(node);\r\n    node = node.firstChild;\r\n    while (node) {\r\n      walkTheDOM(node, func);\r\n      node = node.nextSibling;\r\n    }\r\n  }\r\n  \r\nexport function getSelectedElement() {\r\n    var node = document.getSelection();\r\n    if (node) {\r\n        var ancNode = node.focusNode;\r\n        if (ancNode !== null) {\r\n            while (ancNode.nodeType === 3) {\r\n                ancNode = ancNode.parentNode;\r\n            }\r\n            // const el = (ancNode.nodeType === 3 ? ancNode.parentNode : node);\r\n            return ancNode;\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport function JsonToElement(jsonObject, parentElement) {\r\n    //TODO: create parentelement and jsonobject validation   \r\n    const renderAttrs = (jsElement, element) => {\r\n        if (jsElement.classList) {\r\n            element.classList = [...jsElement.classList];\r\n        }\r\n        if (jsElement.style) {\r\n            const collectedStyle = JsonObjectToStyleString(jsElement.style);\r\n            element.style = collectedStyle;\r\n        }\r\n        //TODO: other attrs...\r\n    }\r\n    const createHtmlElement = (jsElement) => {\r\n        const nodeType = jsElement.tag;\r\n        let element;\r\n        let isShouldRenderAttrs;\r\n        switch (nodeType) {\r\n            case \"#text\":\r\n                element = document.createTextNode(jsElement.textContent);\r\n                break;\r\n            case \"A\":\r\n                element = document.createElement(nodeType);\r\n                element.href = jsElement.href;\r\n                element.target = jsElement.target;\r\n                break;\r\n            default:\r\n                element = document.createElement(nodeType);\r\n                isShouldRenderAttrs = true;\r\n                break;\r\n        }\r\n        if (isShouldRenderAttrs && element) {\r\n            renderAttrs(jsElement, element);\r\n        }\r\n        return element;\r\n    }\r\n    if (!parentElement && jsonObject.type === Levels['0']) {\r\n        parentElement = createHtmlElement(jsonObject);\r\n    }\r\n    if (Array.isArray(jsonObject.children)) {\r\n        jsonObject.children.forEach(jsChild => {\r\n            const htmlElement = createHtmlElement(jsChild);\r\n            if (htmlElement) {\r\n                parentElement.appendChild(htmlElement);\r\n                JsonToElement(jsChild, htmlElement);\r\n            } else {\r\n                console.error('cant create dom element from json', jsChild);\r\n            }\r\n        });\r\n    }\r\n    return parentElement;\r\n}\r\nexport function elementToJson(node, level) {\r\n    \r\n    if (typeof (level) !== \"number\") level = 0;\r\n    const nodeType = node.nodeName;\r\n    let isShouldRenderAttrs = true;\r\n    let json = {};\r\n    let isValid = true;\r\n\r\n    if (Levels[level]) {\r\n        json.type = Levels[level];\r\n        level++;\r\n    }\r\n\r\n    switch (nodeType) {\r\n        case \"#text\":\r\n            json.tag = nodeType;\r\n            json.textContent = node.textContent.replace(/\\u200B/g, '');\r\n            isShouldRenderAttrs = false;\r\n            //question: replace \\n ?\r\n            if (!json.textContent.trim()) isValid = false;\r\n            break;\r\n        case \"A\":\r\n            json.tag = nodeType;\r\n            json.href = node.href;\r\n            json.target = node.target;\r\n            break;\r\n        default:\r\n            json.tag = nodeType;\r\n            //TODO: should we unwrap this node ? \r\n            break;\r\n    }\r\n    if (!isValid) return null;\r\n    if (isShouldRenderAttrs) {\r\n        //TODO: get attrs \r\n        const style = getStyle(node);\r\n        if (Object.keys(style).length > 0) {\r\n            json.style = style;\r\n        }\r\n        if (node.classList && node.classList.length > 0)\r\n            json.classList = [...node.classList];\r\n\r\n        if (node.childNodes && node.childNodes.length > 0)\r\n            json.children = [...node.childNodes].map((cn) => elementToJson(cn, level)).filter(v => v);\r\n    }\r\n\r\n    return json;\r\n\r\n}","import { getSelectedElement } from \"./elements.service\";\r\n\r\nexport function createInnerWrapperElement(element, options) {\r\n  if (typeof (options) !== \"object\") options = {};\r\n  let innerSpan = document.createElement(options.el || \"span\");\r\n  Array.from(element.childNodes).forEach(child => innerSpan.appendChild(child));\r\n  element.appendChild(innerSpan);\r\n  return innerSpan;\r\n}\r\nexport function GetClosestBlockElement(element) {\r\n  if (!element) {\r\n    return null;\r\n  }\r\n  if (element.nodeType !== 1) {\r\n    element = element.parentElement;\r\n  }\r\n  if (window.getComputedStyle(element).display !== \"inline\") return element;\r\n  let parentElement = element.parentElement;\r\n  while (parentElement && window.getComputedStyle(parentElement).display === \"inline\") {\r\n    if (parentElement.parentElement) {\r\n      parentElement = parentElement.parentElement;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return parentElement;\r\n}\r\n//TODO:review\r\nexport function wrapRangeWithBlockElement(limitElement) {\r\n  const wrapElementWithBlock = (el) => {\r\n    let wEl = \"div\";\r\n    if (el.nodeName === \"SPAN\") {\r\n      wEl = \"p\";\r\n    }\r\n    const wrapper = document.createElement(wEl);\r\n    el.wrap(wrapper);\r\n    return wrapper;\r\n  }\r\n  const elements = [];\r\n  let nodes = wrapRangeWithElement();\r\n  nodes.forEach(el => {\r\n    const blockEl = GetClosestBlockElement(el);\r\n    if (blockEl) {\r\n      if (blockEl.ischildOf(limitElement)) {\r\n        const founded = elements.find(block => blockEl.ischildOf(block));\r\n        if (!founded)\r\n          elements.push(blockEl);\r\n      } else {\r\n        const _wrapper = wrapElementWithBlock(el);\r\n        elements.push(_wrapper);\r\n      }\r\n    } else {\r\n      const _wrapper = wrapElementWithBlock(el);\r\n      elements.push(_wrapper);\r\n\r\n    }\r\n  });\r\n  return {\r\n    nodes: nodes,\r\n    blocks: elements\r\n  }\r\n  return elements;\r\n}\r\nexport function wrapRangeWithElement(wrapTag) {\r\n  const ranges = getRanges();\r\n  return ranges.map(r => {\r\n    return wrapRangeText(wrapTag, r);\r\n  }).flat();\r\n}\r\nexport function getRanges() {\r\n  let ranges = [];\r\n\r\n  const sel = window.getSelection();\r\n\r\n  for (let i = 0; i < sel.rangeCount; i++) {\r\n    ranges[i] = sel.getRangeAt(i);\r\n  }\r\n  return ranges;\r\n}\r\n// return all text nodes that are contained within `el`\r\nexport function getTextNodes(el) {\r\n  el = el || document.body\r\n\r\n  var doc = el.ownerDocument || document,\r\n    walker = doc.createTreeWalker(el, NodeFilter.SHOW_TEXT, null, false),\r\n    textNodes = [],\r\n    node = walker.nextNode();\r\n\r\n  while (node) {\r\n    textNodes.push(node);\r\n    node = walker.nextNode();\r\n  }\r\n  return textNodes\r\n}\r\nexport function rangesIntersect(rangeA, rangeB) {\r\n  return rangeA.compareBoundaryPoints(Range.END_TO_START, rangeB) === -1 &&\r\n    rangeA.compareBoundaryPoints(Range.START_TO_END, rangeB) === 1\r\n}\r\nexport function createRangeFromNode(node) {\r\n  var range = node.ownerDocument.createRange()\r\n  try {\r\n    range.selectNode(node)\r\n  } catch (e) {\r\n    range.selectNodeContents(node)\r\n  }\r\n  return range\r\n}\r\nexport function getCaretCharacterOffsetWithin(element) {\r\n  var caretOffset = 0;\r\n  var doc = element.ownerDocument || element.document;\r\n  var win = doc.defaultView || doc.parentWindow;\r\n  var sel;\r\n  if (typeof win.getSelection != \"undefined\") {\r\n    sel = win.getSelection();\r\n    if (sel.rangeCount > 0) {\r\n      var range = win.getSelection().getRangeAt(0);\r\n      var preCaretRange = range.cloneRange();\r\n      preCaretRange.selectNodeContents(element);\r\n      preCaretRange.setEnd(range.endContainer, range.endOffset);\r\n      caretOffset = preCaretRange.toString().length;\r\n    }\r\n  } else if ((sel = doc.selection) && sel.type != \"Control\") {\r\n    var textRange = sel.createRange();\r\n    var preCaretTextRange = doc.body.createTextRange();\r\n    preCaretTextRange.moveToElementText(element);\r\n    preCaretTextRange.setEndPoint(\"EndToEnd\", textRange);\r\n    caretOffset = preCaretTextRange.text.length;\r\n  }\r\n  return caretOffset;\r\n}\r\nexport function setCaretAt(element, charIndex) {\r\n  var node = element;\r\n  node.focus();\r\n  var textNode = Array.from(node.childNodes).filter(child => child.nodeType === Node.TEXT_NODE);\r\n  var range = document.createRange();\r\n  range.setStart(textNode[0], charIndex);\r\n  range.setEnd(textNode[0], charIndex);\r\n  var sel = window.getSelection();\r\n  sel.removeAllRanges();\r\n  sel.addRange(range);\r\n}\r\nexport function pasteHtmlAtCaret(html) {\r\n  const selectedElement = getSelectedElement();\r\n  const contenteditable = selectedElement.closest(\"[contenteditable]\");\r\n  let isValid = true;\r\n  if (contenteditable) {\r\n    if (!contenteditable.contentEditable) {\r\n      isValid = false;\r\n    }\r\n  } else {\r\n    isValid = false;\r\n  }\r\n  if(!isValid){\r\n    return null;\r\n  }\r\n  var sel, range;\r\n  if (window.getSelection) {\r\n    // IE9 and non-IE\r\n    sel = window.getSelection();\r\n    if (sel.getRangeAt && sel.rangeCount) {\r\n      range = sel.getRangeAt(0);\r\n      range.deleteContents();\r\n\r\n      // Range.createContextualFragment() would be useful here but is\r\n      // only relatively recently standardized and is not supported in\r\n      // some browsers (IE9, for one)\r\n      let el;\r\n      if (typeof (html) === \"string\") {\r\n        el = document.createElement(\"div\");\r\n        el.innerHTML = html;\r\n      }\r\n      else if (typeof (html) === \"object\") {\r\n        el = html;\r\n      }\r\n\r\n      var frag = document.createDocumentFragment(), node, lastNode;\r\n      while ((node = el.firstChild)) {\r\n        lastNode = frag.appendChild(node);\r\n      }\r\n      range.insertNode(frag);\r\n\r\n      // Preserve the selection\r\n      if (lastNode) {\r\n        range = range.cloneRange();\r\n        range.setStartAfter(lastNode);\r\n        range.collapse(true);\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n      }\r\n    }\r\n  }\r\n}\r\nexport function rangeIntersectsNode(range, node) {\r\n  if (range.intersectsNode) {\r\n    return range.intersectsNode(node)\r\n  } else {\r\n    return rangesIntersect(range, createRangeFromNode(node))\r\n  }\r\n}\r\nexport function getRangeTextNodes(range) {\r\n  var container = range.commonAncestorContainer,\r\n    nodes = getTextNodes(container.parentNode || container)\r\n\r\n  return nodes.filter((node) => {\r\n    return rangeIntersectsNode(range, node) && isNonEmptyTextNode(node)\r\n  })\r\n}\r\nexport function isNonEmptyTextNode(node) {\r\n  return node.textContent.length > 0\r\n}\r\nexport function removeElement(el) {\r\n  if (el.parentNode) {\r\n    el.parentNode.removeChild(el)\r\n  }\r\n}\r\nexport function replaceNode(replacementNode, node) {\r\n  if (typeof node.parentNode !== \"undefined\") {\r\n    removeElement(replacementNode);\r\n    node.parentNode.insertBefore(replacementNode, node);\r\n    removeElement(node);\r\n  }\r\n}\r\nexport function selectText(node) {\r\n  if (document.body.createTextRange) {\r\n    const range = document.body.createTextRange();\r\n    range.moveToElementText(node);\r\n    range.select();\r\n  } else if (window.getSelection) {\r\n    const selection = window.getSelection();\r\n    const range = document.createRange();\r\n    range.selectNodeContents(node);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n  } else {\r\n    console.warn(\"Could not select text in node: Unsupported browser.\");\r\n  }\r\n}\r\nexport function insertAfter(newNode, referenceNode) {\r\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\r\n}\r\nexport function createWrapperFunction(wrapperEl, range) {\r\n  var startNode = range.startContainer,\r\n    endNode = range.endContainer,\r\n    startOffset = range.startOffset,\r\n    endOffset = range.endOffset\r\n\r\n  return function wrapNode(node) {\r\n    var currentRange = document.createRange(),\r\n      currentWrapper = wrapperEl.cloneNode()\r\n\r\n    currentRange.selectNodeContents(node);\r\n    if (node === startNode && startNode.nodeType === 3) {\r\n      currentRange.setStart(node, startOffset)\r\n      startNode = currentWrapper\r\n      startOffset = 0\r\n    }\r\n    if (node === endNode && endNode.nodeType === 3) {\r\n      currentRange.setEnd(node, endOffset)\r\n      endNode = currentWrapper;\r\n      endOffset = 1\r\n    }\r\n    currentRange.surroundContents(currentWrapper)\r\n    return currentWrapper\r\n  }\r\n}\r\nexport function getAllNodes() {\r\n  var nodes, range;\r\n  if (typeof range === 'undefined') {\r\n    // get the current selection if no range is specified\r\n    range = window.getSelection().getRangeAt(0)\r\n  }\r\n  if (range.isCollapsed) {\r\n    // nothing to wrap\r\n    return []\r\n  }\r\n  nodes = getRangeTextNodes(range)\r\n  nodes = nodes.map(node => {\r\n    if (node !== null) {\r\n      while (node.nodeType === 3) {\r\n        node = node.parentNode;\r\n      }\r\n      return node;\r\n    }\r\n    return null;\r\n  });\r\n  return nodes\r\n}\r\nexport function wrapRangeText(wrapperEl, range) {\r\n  var nodes, wrapNode;\r\n\r\n  if (typeof range === 'undefined') {\r\n    // get the current selection if no range is specified\r\n    range = window.getSelection().getRangeAt(0)\r\n  }\r\n\r\n  if (range.isCollapsed) {\r\n    // nothing to wrap\r\n    return []\r\n  }\r\n\r\n  if (typeof wrapperEl === 'undefined') {\r\n    wrapperEl = 'span'\r\n  }\r\n\r\n  if (typeof wrapperEl === 'string') {\r\n    // assume it's a tagname\r\n    wrapperEl = document.createElement(wrapperEl);\r\n  }\r\n\r\n  wrapNode = createWrapperFunction(wrapperEl, range)\r\n\r\n  nodes = getRangeTextNodes(range)\r\n\r\n  nodes = nodes.map(wrapNode);\r\n  return nodes\r\n}\r\nexport function setSelectionBetweenTwoNodes(firstFlag, lastFlag, options = {}) {\r\n  const _options = { remove: true };\r\n  Object.assign(_options, options);\r\n  document.getSelection().setBaseAndExtent(firstFlag, 0, lastFlag, lastFlag.childNodes.length);\r\n  if (_options.remove) {\r\n    [firstFlag, lastFlag].forEach(e => e.unwrap());\r\n  }\r\n}\r\nexport function setSelectionFlags(firstElement, LastElement) {\r\n  const selection = window.getSelection();\r\n  const firstFlag = document.createElement('text-selection');\r\n  firstFlag.setAttribute('zero-space', firstElement.textContent.length === 0)\r\n  const lastFlag = document.createElement('text-selection');\r\n  lastFlag.setAttribute('zero-space', LastElement.textContent.length === 0)\r\n\r\n  firstElement.prepend(firstFlag); //Set flag the first\r\n  LastElement.appendChild(lastFlag); //Set Flag at last\r\n  return { firstFlag, lastFlag };\r\n}\r\nexport function getSelectedHTML() {\r\n  var range;\r\n  if (window.getSelection) {\r\n    var selection = window.getSelection();\r\n    if (selection.focusNode === null) return;\r\n    range = selection.getRangeAt(0);\r\n    if (range.collapsed) {\r\n      return;\r\n    }\r\n    var content = range.extractContents();\r\n    return {\r\n      content: content,\r\n      range: range\r\n    }\r\n  }\r\n}\r\nexport function saveSelection() {\r\n  if (window.getSelection) {\r\n    var sel = window.getSelection();\r\n    if (sel.getRangeAt && sel.rangeCount) {\r\n      return sel.getRangeAt(0);\r\n    }\r\n  } else if (document.selection && document.selection.createRange) {\r\n    return document.selection.createRange();\r\n  }\r\n  return null;\r\n};\r\nexport function restoreSelection(range) {\r\n  if (range) {\r\n    if (window.getSelection) {\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    } else if (document.selection && range.select) {\r\n      range.select();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","\r\nexport default class CopyPaste {\r\n\r\n  constructor(target, options) {\r\n    this.target = target;\r\n    this.stylesToPaste = typeof options.stylesToPaste === \"object\" ? options.stylesToPaste : null;\r\n    this.onCopy = typeof options.onCopy === \"function\" ? options.onCopy : null;\r\n    this.onPaste = typeof options.onPaste === \"function\" ? options.onPaste : null;\r\n    this.paste = this.paste.bind(this);\r\n    this.copy = this.copy.bind(this);\r\n    this.start();\r\n  }\r\n  copy(event) {\r\n    let html = \"\";\r\n    if (typeof window.getSelection) {\r\n      var sel = window.getSelection();\r\n      if (sel.rangeCount) {\r\n        const container = document.createElement(\"div\");\r\n        for (var i = 0, len = sel.rangeCount; i < len; ++i) {\r\n          container.appendChild(sel.getRangeAt(i).cloneContents());\r\n        }\r\n        html = container.innerHTML;\r\n      }\r\n    } else if (typeof document.selection) {\r\n      if (document.selection.type === \"Text\") {\r\n        html = document.selection.createRange().htmlText;\r\n      }\r\n    }\r\n    // navigator.clipboard.writeText(html);\r\n\r\n    event.clipboardData.setData('text/html', html);\r\n\r\n\r\n  }\r\n  paste(event) {\r\n    // document.execCommand(\"DefaultParagraphSeparator\", false, \"h2\");\r\n    if (this.stylesToPaste) {\r\n      this.pasteWithStyles(event);\r\n    } else {\r\n      this.pastePlainText(event);\r\n    }\r\n\r\n  };\r\n  pastePlainText(event) {\r\n    const data = event.clipboardData || window.clipboardData;\r\n    event.preventDefault();\r\n    let content = data.getData('text/plain').trim();\r\n    if (this.onPaste) {\r\n      content = this.onPaste(content)\r\n    }\r\n    document.execCommand('inserttext', false, content);\r\n  }\r\n  pasteWithStyles(event) {\r\n    event.preventDefault();\r\n    let textContentContainer = document.createElement(\"div\");\r\n    textContentContainer.style.display = \"none\";\r\n    let HtmlContainer = document.createElement(\"div\");\r\n    HtmlContainer.style.display = \"none\";\r\n    try {\r\n      const data = event.clipboardData || window.clipboardData;\r\n      textContentContainer.innerText = data.getData('text/plain').trim();;\r\n      HtmlContainer.innerHTML = data.getData('text/html').trim();\r\n      if (!HtmlContainer.innerHTML) {\r\n        HtmlContainer.innerHTML = data.getData('text/plain').trim();;\r\n      }\r\n      document.body.appendChild(textContentContainer);\r\n      document.body.appendChild(HtmlContainer);\r\n\r\n      const htmlNodes = [];\r\n      const recurse = (el, callback) => {\r\n        el.childNodes.forEach(node => {\r\n          callback(node);\r\n          if (node.nodeType === 1) {\r\n            recurse(node, callback);\r\n          }\r\n        });\r\n\r\n      };\r\n\r\n\r\n\r\n      recurse(HtmlContainer, (node) => {\r\n        if (node.nodeType === 3) {\r\n          const span = document.createElement(\"span\");\r\n          for (const key in this.stylesToPaste) {\r\n            if (Object.hasOwnProperty.call(this.stylesToPaste, key)) {\r\n              span.style[key] = \"inherit\";\r\n            }\r\n          }\r\n          node.wrap(span);\r\n          htmlNodes.push(span);\r\n        }\r\n      });\r\n      htmlNodes.forEach(s => {\r\n        if (!s.textContent.trim())\r\n          return;\r\n        const collectedStyles = window.getComputedStyle(s);\r\n        for (const key in collectedStyles) {\r\n          if (Object.hasOwnProperty.call(collectedStyles, key)) {\r\n            const value = collectedStyles[key];\r\n            if (this.stylesToPaste[key]) {\r\n              if (value === \"inherit\") {\r\n                s.style[key] = \"\";\r\n              } else if (value.includes(\"none\")) {\r\n                s.style[key] = \"\";\r\n              } else if (value.replace(/ /gm, \"\").includes(\"(0,0,0\")) {\r\n                s.style[key] = \"\";\r\n              } else if (value === \"normal\") {\r\n                s.style[key] = \"\";\r\n              } else {\r\n                s.style[key] = value;\r\n\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n      });\r\n      const textNodes = [];\r\n      recurse(textContentContainer, (node => {\r\n        textNodes.push(node);\r\n      }));\r\n      htmlNodes.forEach(el => {\r\n        const replaced = textContentContainer.innerHTML.replace(el.textContent, el.outerHTML);;\r\n        textContentContainer.innerHTML = replaced;\r\n      });\r\n      let content = textContentContainer.innerHTML;\r\n      if (this.onPaste) {\r\n        this.onPaste(event)\r\n      }\r\n      document.execCommand('inserthtml', false, content);\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n    finally {\r\n      textContentContainer.parentNode.removeChild(textContentContainer);\r\n      HtmlContainer.parentNode.removeChild(HtmlContainer);\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.target.addEventListener(\"paste\", this.paste);\r\n    this.target.addEventListener(\"copy\", this.copy);\r\n  }\r\n  destroy() {\r\n    this.target.removeEventListener(\"paste\", this.paste);\r\n    this.target.removeEventListener(\"copy\", this.copy);\r\n\r\n  }\r\n}","export const EVENTS = {\r\n  \r\n}","export   const TARGETS = {\r\n    _blank: \"_blank\",\r\n    _self: \"_self\",\r\n    _parent: \"_parent\",\r\n    _top: \"_top\"\r\n}\r\nexport  const resetURL = (src) => {\r\n    src = src.replace(/https:/g, '');\r\n    src = src.replace(/http:/g, '');\r\n    src = src.replace(/mailto:/g, '');\r\n    src = src.replace(/tel:/g, '');\r\n    src = src.replace(/\\//g, '');\r\n    return src;\r\n}\r\nexport   const createTempLinkElement = (href) => {\r\n    const Atag = document.createElement(\"a\");\r\n    Atag.href = href;\r\n    return Atag;\r\n}","\r\nimport { collectStyleFromSelectedElement } from '../style.service';\r\nimport { EVENTS } from '../events/events';\r\nimport { getSelectedElement } from '../elements.service';\r\nimport { resetURL } from '../link.service';\r\n\r\n//TODO: review\r\n//question: how can we expose the collectedStyle ? \r\n//question: should we use this ? https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\nexport default class Inpsector {\r\n    constructor(target, onInspect) {\r\n\r\n        if (!target) {\r\n            console.error('[-] Inpsector => target is null');\r\n            return null;\r\n        }\r\n        //TODO: use the validator\r\n        this.onInspect = onInspect;\r\n        this.target = target;\r\n\r\n        const launchInspect = () => {\r\n            const collectedStyle = collectStyleFromSelectedElement(this.target);\r\n            if (typeof (this.onInspect) === \"function\")\r\n                this.onInspect(collectedStyle);\r\n            if (typeof (EVENTS[\"inspect\"]) === \"function\") {\r\n                EVENTS[\"inspect\"](collectedStyle);\r\n            }\r\n            const selectedElement = getSelectedElement();\r\n            \r\n            if(selectedElement ){\r\n                const aTag = selectedElement.closest(\"a\");\r\n                if(aTag){\r\n                    if(typeof(EVENTS[\"inspectLink\"]) === \"function\"){\r\n                        EVENTS[\"inspectLink\"]({\r\n                            protocol:aTag.protocol,\r\n                            href:resetURL(aTag.href),\r\n                            target:aTag.getAttribute(\"target\") || \"\",\r\n                            element:aTag\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.onKeyDown = (e) => {\r\n            //TODO: review\r\n            if (e.keyCode === 8 && this.target.children.length <= 1 && !this.target.textContent) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n            launchInspect();\r\n        }\r\n        this.onClick = () => {\r\n            launchInspect();\r\n        }\r\n\r\n        this.target.addEventListener('click', this.onClick);\r\n        this.target.addEventListener('keydown', this.onKeyDown);\r\n\r\n        this.Destroy = () => {\r\n            this.target.removeEventListener('click', this.onClick);\r\n            this.target.removeEventListener('keydown', this.onKeyDown);\r\n            this.target = null;\r\n        }\r\n    }\r\n}","import { GetClosestBlockElement, insertAfter, pasteHtmlAtCaret } from \"../range.service\";\r\n\r\n\r\nexport default class KeyPress {\r\n\r\n    constructor(target, options) {\r\n        if (!target) {\r\n            console.error('[-] keyPress => target is null');\r\n            return null;\r\n        }\r\n        this.target = target;\r\n\r\n\r\n        this.keypress = (e) => {\r\n            if (e.keyCode === 13) {\r\n                e.preventDefault();\r\n                if(e.shiftKey){\r\n                    pasteHtmlAtCaret(\"<br/>\")\r\n                    // document.execCommand('inserthtml', false, );\r\n                    return false;\r\n                }\r\n                document.execCommand('inserttext', false, \"\\n\");\r\n                return false;\r\n                // const range = document.createRange();\r\n                // const selection = window.getSelection();\r\n                // e.preventDefault();\r\n                // var blockElement = GetClosestBlockElement(selection.anchorNode);\r\n                // range.setStart(selection.focusNode, selection.baseOffset);\r\n                // range.setEnd(blockElement,blockElement.childNodes.length);\r\n                // selection.removeAllRanges();\r\n                // selection.addRange(range);\r\n                // const docFragment = range.extractContents();\r\n                // Array.from(docFragment.children).forEach(child => {\r\n                //     if (child.nodeType === 1 && !child.textContent.trim()) {\r\n                //         child.unwrap();\r\n                //     }\r\n                // });\r\n              \r\n                // const el = document.createElement(blockElement.nodeName);\r\n                // el.appendChild(docFragment);\r\n                // insertAfter(el, blockElement);\r\n                // selection.removeAllRanges();\r\n\r\n            }\r\n\r\n            // const ctrl = \"^\";\r\n            // const alt = \"!\";\r\n            // const shift  = \"+\";\r\n\r\n            // /*\r\n            // [\"^+66\",() => {}];\r\n            // */\r\n            // if (e.ctrlKey) {\r\n            //     this.keys.forEach(key => {\r\n            //         if (Array.isArray(key) && key.length === 2 && key[0] === e.keyCode && typeof(key[1]) === \"function\") {\r\n            //             e.preventDefault();\r\n            //             key[1]();\r\n            //         }\r\n            //     })\r\n            // }\r\n\r\n        }\r\n\r\n\r\n        this.target.addEventListener('keydown', this.keypress);\r\n\r\n        this.Destroy = () => {\r\n            this.target.removeEventListener('keydown', this.keypress);\r\n            this.target = null;\r\n        }\r\n    }\r\n}","import DomUtilis from \"./utilis/DomUtilis\";\r\nimport CopyPaste from \"./services/copyPaste/copyPaste.service\";\r\nimport Inpsector from \"./services/Inspector/Inspector.service\";\r\nimport KeyPress from \"./services/keyPress/KeyPress\";\r\n\r\nimport { elementToJson, JsonToElement } from \"./services/elements.service\";\r\n\r\n//TODO:review\r\nexport default class Connector {\r\n    constructor() {\r\n    }\r\n\r\n    Connect(element, options) {\r\n        if (typeof element === \"string\") {\r\n            element = document.getElementById(element);\r\n            if (!element) {\r\n                //TODO: use the validator\r\n                console.error('[-] =>connectWith should be element id or dom element..');\r\n                return null;\r\n            }\r\n        } else if (DomUtilis.isElement(element)) {\r\n            // valid..\r\n        } else {\r\n            //TODO: use the validator\r\n            console.error('[-] =>connectWith should be element id or dom element..');\r\n            return null;\r\n        }\r\n       const RenderInnerHTML = (element) => {\r\n            const emptyElement = (node) => {\r\n                return new Promise((resolve) => {\r\n                    while (node.firstElementChild) {\r\n                        node.firstElementChild.remove();\r\n                    }\r\n                    resolve();\r\n                })\r\n            }\r\n            const jsonContent = elementToJson(element);\r\n    \r\n            const renderedElement = JsonToElement(jsonContent);\r\n    \r\n            emptyElement(element).then(() => element.innerHTML = renderedElement.innerHTML);\r\n        }\r\n        const usePlugins = (element, options) => {\r\n            return {\r\n                copyPaste: new CopyPaste(element,options),\r\n                inspector: new Inpsector(element, options.onInspect),\r\n                 keyPress: new KeyPress(element, options)\r\n            }\r\n        }\r\n        RenderInnerHTML(element);\r\n        // element.contentEditable = 'true';\r\n        this.plugins = usePlugins(element, options);\r\n        return element;\r\n    }\r\n    //TODO: destory events..\r\n    //question: how to use the events ? \r\n    \r\n\r\n    Destroy() {\r\n        for (const key in this.plugins) {\r\n            if (this.plugins.hasOwnProperty(key)) {\r\n                const plugin = this.plugins[key];\r\n                plugin.Destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import {\r\n    wrapRangeWithElement,\r\n    setSelectionFlags,\r\n    setSelectionBetweenTwoNodes,\r\n    getTextNodes,\r\n    createInnerWrapperElement,\r\n    setCaretAt,\r\n    GetClosestBlockElement\r\n} from \"./services/range.service\";\r\nimport Modes from './constants/Modes.json';\r\nimport { splitHTML } from \"./utilis/splitHTML\";\r\nimport { setStyle, toggleStyle, collectStyleFromSelectedElement } from \"./services/style.service\";\r\nimport { normalizeElement, removeZeroSpace } from \"./services/textEditor.service\";\r\nimport Connector from './connector';\r\nimport './components/custom/textSelected';\r\nimport { elementToJson, JsonToElement, getSelectedElement } from \"./services/elements.service\";\r\nimport {EVENTS} from './services/events/events';\r\nimport { createTempLinkElement, resetURL,TARGETS } from \"./services/link.service\";\r\nexport default class Core {\r\n\r\n    // *target => can be Id of Element that should contain Editor instance or the element itself..\r\n    // *config =>  configuration passed t   o Tool constructor\r\n    //TODO: add target validations..;\r\n    constructor(target, config) {\r\n        this.__config = {\r\n            onInspect: undefined,\r\n        };\r\n        \r\n        this.on = (key,callback)=>{\r\n            if(typeof(key) !== \"string\"){\r\n                console.error(\"key must be a string..\");\r\n            }\r\n            if(typeof(callback) !== \"function\"){\r\n                console.error(\"callback must be a function..\");\r\n            }\r\n            EVENTS[key]  = callback;\r\n        };\r\n        this.Connector = new Connector();\r\n        this.modeHandlers = {\r\n            [Modes.Toggle]: (v, key, value, options) => this.onToggle(v, key, value, options),\r\n            [Modes.Extend]: (v, key, value, options) => this.onExtend(v, key, value, options),\r\n        }\r\n        this.config = config ? Object.assign(this.__config, config) : this.__config;\r\n        this.events = {\r\n            styleChanged: this.config.onInspect,\r\n        }\r\n        this.connectedElement = this.Connector.Connect(target, this.config);\r\n    }\r\n    save() {\r\n        return elementToJson(this.connectedElement);\r\n    }\r\n    load(json) {\r\n        return JsonToElement(json, this.connectedElement);\r\n    }\r\n    destroy() {\r\n        this.Connector.Destroy();\r\n        const self = this;\r\n        for (const key in self) {\r\n            this[key] = null;\r\n            delete this[key];\r\n        }\r\n    }\r\n    //TODO: review.\r\n    //TODO: Create normalize..\r\n    //question: if text was selected, should we unwrap the selectiion only ? \r\n    unLink() {\r\n        if (!this.isValid()) {\r\n            return;\r\n        }\r\n        const selection = window.getSelection();\r\n\r\n        if (selection && !selection.toString()) {\r\n            let elementToUnwrap;\r\n            const baseNode = selection.baseNode;\r\n            if (baseNode && baseNode.nodeType === 3 && baseNode.parentElement) {\r\n                elementToUnwrap = baseNode.parentElement;\r\n            }\r\n            if (baseNode && baseNode.nodeType === 1) {\r\n                elementToUnwrap = elementToUnwrap.closest(\"a\");\r\n            }\r\n            if (elementToUnwrap) {\r\n                elementToUnwrap.unwrap();\r\n            }\r\n            return null;\r\n        }\r\n        const linkElements = wrapRangeWithElement();\r\n        Array.from(linkElements).forEach(r => {\r\n            const closestATag = r.closest(\"a\");\r\n            if (closestATag) {\r\n                var a = splitHTML(r, closestATag, {\r\n                    tag: \"a\"\r\n                })\r\n                if (a) {\r\n                    a.center.unwrap();\r\n                }\r\n            }\r\n            Array.from(r.querySelectorAll(\"a\")).forEach(a => {\r\n                a.unwrap();\r\n            });\r\n            r.unwrap();\r\n        });\r\n        const { firstFlag, lastFlag } = setSelectionFlags(linkElements[0], linkElements[linkElements.length - 1]); //Set Flag at last\r\n        setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n    }\r\n    //TODO: review\r\n    //TODO: merge a tags..\r\n    //TODO: remove a childs\r\n    //TODO: move function to Link.service.js\r\n    link(options = {}) {\r\n        if (!options || (options && !options.href) ||  !this.isValid()) {\r\n            return;\r\n        }\r\n     \r\n        if (window.getSelection && !window.getSelection().toString()) {\r\n            console.warn(\"no text selected..\");\r\n            return null;\r\n        }\r\n        const unwrapAtags = (linkElements) => {\r\n            linkElements.forEach(link => {\r\n                Array.from(link.querySelectorAll(\"a\")).forEach(aTag => aTag.unwrap());\r\n                const closestATag = link.parentElement ? link.parentElement.closest(\"a\") : null;\r\n                if (closestATag) {\r\n                    var a = splitHTML(link, closestATag, {\r\n                        tag: \"a\"\r\n                    });\r\n                    if (a) {\r\n                        a.center.unwrap();\r\n                    }\r\n                    // closestATag.unwrap();\r\n                }\r\n            });\r\n        }\r\n        const setTargetToTag = (linkElements, renderedLink, _target) => {\r\n            linkElements.forEach(aTag => {\r\n                aTag.href = renderedLink;\r\n                if (_target) {\r\n                    aTag.setAttribute(\"target\", _target);\r\n                }\r\n            });\r\n        }\r\n        const setProtocol = (_protocol, newURL) => {\r\n            _protocol = _protocol.replace(/:/g, \"\");\r\n            _protocol = _protocol.replace(/\\/\\//g, \"\");\r\n            _protocol += \":\";\r\n            if (_protocol.includes(\"http\")) {\r\n                _protocol += \"//\";\r\n            } else {\r\n            }\r\n            newURL.push(_protocol);\r\n            return _protocol;\r\n        }\r\n    \r\n\r\n        const { href = \"\", protocol = \"\", target = \"\" } = options;\r\n\r\n        const linkElements = wrapRangeWithElement(\"a\");\r\n        let newURL = [];\r\n        const Atag = createTempLinkElement(href);\r\n        let _href = resetURL(href.trim());\r\n\r\n        let _protocol = protocol.trim() || Atag.protocol;\r\n        let _target = null;\r\n        const testTarget = TARGETS[target.trim().toLowerCase()];\r\n        if (testTarget) {\r\n            _target = testTarget;\r\n        }\r\n        if (_protocol.trim()) {\r\n            _protocol = setProtocol(_protocol, newURL);\r\n        }\r\n        if (_href) {\r\n            newURL.push(_href);\r\n        }\r\n        const renderedLink = newURL.join(\"\");\r\n        unwrapAtags(linkElements);\r\n        setTargetToTag(linkElements, renderedLink, _target);\r\n        const { firstFlag, lastFlag } = setSelectionFlags(linkElements[0], linkElements[linkElements.length - 1]); //Set Flag at last\r\n        setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n        \r\n        normalizeElement(this.connectedElement);// merge siblings and parents with child as possible.. \r\n    }\r\n    //TODO: review\r\n    //question : we want to handle and toggle any attribute ? \r\n    toggleClass(className, options) {\r\n        //here\r\n        if (!this.isValid()) {\r\n            return;\r\n        }\r\n        if (typeof (className) !== \"string\") {\r\n            console.warn(\"className must be a string..\");\r\n            return null;\r\n        }\r\n\r\n        const elements = wrapRangeWithElement();\r\n        if (elements.length === 0) {\r\n            return;\r\n        }\r\n        if (!options) options = {};\r\n        if (typeof (options.selection) !== \"boolean\") options.selection = true;\r\n        const isToggleOn = (typeof (options.isON) === \"boolean\") ? options.isON : elements[0].closest(`[class='${className}']`);\r\n        if (!isToggleOn) {\r\n            elements.forEach(el => el.classList.add(className));\r\n        } else {\r\n            elements.forEach(el => {\r\n                if (el.parentElement) {\r\n                    const closestClass = el.parentElement.closest(`[class='${className}']`);\r\n                    if (closestClass) {\r\n                        const split = splitHTML(el, closestClass);\r\n                        if (split) {\r\n                            split.center.removeClassName(className);\r\n                        }\r\n                    }\r\n                } else {\r\n                    el.removeClassName(className);\r\n                }\r\n            })\r\n        }\r\n        const { firstFlag, lastFlag } = options.selection ? setSelectionFlags(elements[0], elements[elements.length - 1]) : { firstFlag: null, lastFlag: null }; //Set Flag at last\r\n        normalizeElement(this.connectedElement);// merge siblings and parents with child as possible..\r\n        if (firstFlag && lastFlag) {\r\n            setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n        } else {\r\n            const sel = window.getSelection();\r\n            if (sel.removeAllRanges) {\r\n                sel.removeAllRanges();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * @param {String} key - key of css \r\n    *  @param {String} value - value of css\r\n    *  @param {(Object | String)} Modes - mode from Modes => Extend or Toggle\r\n    *  @param {string} Modes.Extend - override style\r\n    *  @param {string} Modes.toggle - toggle style\r\n    *  @param {Object} [options] - options \r\n    */\r\n    execCmd(key, value, mode, options) {\r\n        if (!this.isValid() || !this.isVAlidKeyValue(key, value)) {\r\n            return;\r\n        }\r\n        this.connectedElement.normalize();\r\n        this.ELEMENTS = [];\r\n        mode = mode ? mode : Modes.Extend;\r\n        if (!options) options = {};\r\n        if (typeof (options.selection) !== \"boolean\") options.selection = true;\r\n   \r\n\r\n        //==============review===============//\r\n        this.ELEMENTS = wrapRangeWithElement();\r\n        if (!options.selection) {\r\n            const lastNode = this.ELEMENTS[this.ELEMENTS.length - 1];\r\n            if (lastNode)\r\n                this.caretHolder = this.createCaretPlacement(lastNode);\r\n        }\r\n\r\n        if (options.unWrap && Array.isArray(options.unWrap)) {\r\n            options.unWrap.forEach(selector => {\r\n                this.ELEMENTS.forEach(txtNode => {\r\n                    const closestElementToUnWrap = txtNode.closest(selector);\r\n                    if (closestElementToUnWrap) {\r\n                        closestElementToUnWrap.unwrap();\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        //This is how i make the text selection, i dont know if this is good way, but it works..\r\n        const { firstFlag, lastFlag } = options.selection ? setSelectionFlags(this.ELEMENTS[0], this.ELEMENTS[this.ELEMENTS.length - 1]) : { firstFlag: null, lastFlag: null }; //Set Flag at last\r\n        //======================================================================//\r\n        removeZeroSpace(getTextNodes(this.connectedElement));\r\n\r\n        let ToggleMode;//Declare toggle mode, The first element determines whether it is on or off\r\n\r\n        this.ELEMENTS.forEach((element, i) => {\r\n            options.onOff = ToggleMode;\r\n            const result = this.modeHandlers[mode](element, key, value, options);\r\n            if (mode === Modes.Toggle && typeof (ToggleMode) === 'undefined')\r\n                ToggleMode = result;\r\n        });\r\n        normalizeElement(this.connectedElement);// merge siblings and parents with child as possible.. \r\n        //use the first and last flags to make the text selection and unwrap them..\r\n        if (firstFlag && lastFlag) {\r\n            setSelectionBetweenTwoNodes(firstFlag, lastFlag);\r\n        } else {\r\n            const sel = window.getSelection();\r\n            if (sel.removeAllRanges) {\r\n                sel.removeAllRanges();\r\n            }\r\n            if (this.caretHolder) {\r\n                setCaretAt(this.caretHolder, this.caretHolder.textContent.length);\r\n                this.caretHolder.unwrap();\r\n                this.caretHolder = null;\r\n            }\r\n        }\r\n        const collectedStyles =  collectStyleFromSelectedElement(this.connectedElement);\r\n        if(typeof (EVENTS[\"inspect\"]) === \"function\"){\r\n            EVENTS[\"inspect\"](collectedStyles);\r\n        }\r\n        this.dispatchEvent('styleChanged', collectedStyles);\r\n    }\r\n    createCaretPlacement(atNode) {\r\n        if (!atNode) return null;\r\n        const caretHolder = document.createElement('text-selection');\r\n        caretHolder.setAttribute('zero-space', 'true');\r\n        atNode.appendChild(caretHolder);\r\n        return caretHolder;\r\n    }\r\n\r\n    dispatchEvent(event, payload) {\r\n        if (this.events[event])\r\n            this.events[event](payload);\r\n    }\r\n    onToggle(element, key, value, options) {\r\n        if (options.target === \"block\") {\r\n            this.createBlockStyle(options, element, key, value);\r\n        } else {\r\n            // detect if there is any parent with style to split.\r\n            //TODO: use the catch from options to detect more than one style or tag element.\r\n            let elementToSplit = element.closest(`[style*='${value}']`);\r\n            if (elementToSplit && window.getComputedStyle(elementToSplit).display !== \"inline\") {\r\n                let innerSpan = createInnerWrapperElement(elementToSplit);\r\n                elementToSplit.style[key] = null;\r\n                innerSpan.style[key] = value;\r\n                options.onOff = false;\r\n                return this.onToggle(element, key, value, options);\r\n            }\r\n            if (elementToSplit && elementToSplit !== element) {\r\n                if (typeof (options.onOff) === 'undefined')\r\n                    options.onOff = false;\r\n                //unbold\r\n                const splitElements = splitHTML(element, elementToSplit);\r\n                // if there is no split elements, its error!\r\n                if (splitElements) {\r\n                    toggleStyle(splitElements.center, key, value, options.onOff);\r\n                } else {\r\n                    console.error('splitHTML return null');\r\n                }\r\n            }\r\n            else {\r\n                if (typeof (options.onOff) === 'undefined' && elementToSplit) {\r\n                    options.onOff = false;\r\n                } else if (typeof (options.onOff) === 'undefined') {\r\n                    options.onOff = true;\r\n                }\r\n                toggleStyle(element, key, value, options.onOff);\r\n                normalizeElement(element);\r\n            }\r\n\r\n            return options.onOff;\r\n        }\r\n\r\n    }\r\n    onExtend(element, key, value, options) {\r\n        if (options.target === \"block\") {\r\n            this.createBlockStyle(options, element, key, value);\r\n        } else {\r\n            const elementToSplit = element.closest(`[style*='${key}']`);\r\n            if (elementToSplit) {\r\n                const splitBlocks = splitHTML(element, elementToSplit);\r\n                if (splitBlocks) {\r\n                    setStyle(splitBlocks.center, key, value);\r\n                }\r\n                else if (options.target === \"block\") {\r\n                    elementToSplit.style[key] = value;\r\n                }\r\n                else if (options.target !== \"block\") {\r\n                    let innerSpan = createInnerWrapperElement(elementToSplit, { el: 'span' });\r\n                    setStyle(innerSpan, key, value);\r\n                    elementToSplit.style[key] = null;\r\n                    return this.onExtend(element, key, value);\r\n\r\n                }\r\n                else if (elementToSplit !== element) {\r\n                    const splitElements = splitHTML(element, elementToSplit);\r\n                    if (splitElements) {\r\n                        setStyle(splitElements.center, key, value);\r\n                    } else {\r\n                        console.error('splitHTML return null');\r\n                    }\r\n                }\r\n\r\n            } else if (window.getComputedStyle(element).display !== \"block\" && options.target === \"block\") {\r\n                const blockElement = GetClosestBlockElement(element);\r\n                if (blockElement && blockElement.ischildOf(this.connectedElement)) {\r\n                    setStyle(parentElement, key, value);\r\n                } else {\r\n                    const wrapper = document.createElement(\"div\");\r\n                    parentElement.wrap(wrapper);\r\n                    setStyle(wrapper, key, value);\r\n                }\r\n            } else {\r\n                setStyle(element, key, value);\r\n            }\r\n        }\r\n\r\n    }\r\n    createBlockStyle(options, element, key, value) {\r\n        const findBlock = (element) => {\r\n            const computed = window.getComputedStyle(element);\r\n            if (computed && computed.display !== \"inline\") {\r\n                return element;\r\n            } else if (element.parentNode && element.parentNode !== this.connectedElement) {\r\n                return findBlock(element.parentNode);\r\n            }\r\n        };\r\n        if (options.as === \"inline\") {\r\n            let blockElement = findBlock(element);\r\n            if (blockElement) {\r\n                const wrapTextNodeWithAppendStyle = (node) => {\r\n                    const span = document.createElement(\"span\");\r\n                    span.style[key] = value;\r\n                    node.wrap(span);\r\n                };\r\n                const createInlineStyle = (parentNode) => {\r\n                    parentNode.style[key] = null;\r\n                    Array.from(parentNode.childNodes).forEach(node => {\r\n                        if (node.nodeType === 3) {\r\n                            wrapTextNodeWithAppendStyle(node);\r\n                        } else if (node.nodeType === 1 && node.nodeName !== \"BR\") {\r\n                            const computed = window.getComputedStyle(node);\r\n                            if (computed.display !== \"inline\") {\r\n                                createInlineStyle(node);\r\n                            } else {\r\n                                node.style[key] = value;\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n                createInlineStyle(blockElement);\r\n                // Array.from(blockElement.querySelectorAll(\"span\")).forEach(el=>el.style[key] = value);\r\n            } else {\r\n                this.createBlockElAndStyleIt(key, value, element);\r\n            }\r\n\r\n        } else {\r\n            let blockElement = findBlock(element);\r\n            if (blockElement) {\r\n                blockElement.style[key] = value;\r\n                Array.from(blockElement.querySelectorAll(`[style*='${key}']`)).forEach(el => el.style[key] = null);\r\n            } else {\r\n                this.createBlockElAndStyleIt(key, value, element);\r\n            }\r\n        }\r\n    }\r\n\r\n    createBlockElAndStyleIt(key, value, element) {\r\n        const pargh = document.createElement(\"p\");\r\n        pargh.style[key] = value;\r\n        element.wrap(pargh);\r\n    }\r\n    isVAlidKeyValue(key,value){\r\n        return !!(typeof key === \"string\" && typeof value === \"string\"); \r\n    }\r\n    isValid() {\r\n        if (!this.connectedElement) {\r\n            console.error('please create new instance..')\r\n            return false;\r\n        };\r\n        if (this.connectedElement.contentEditable !== \"true\") {\r\n            return false;\r\n        }\r\n        var selectedElement = getSelectedElement();\r\n        if (selectedElement && (selectedElement.ischildOf(this.connectedElement) || selectedElement === this.connectedElement)) {\r\n            return true;\r\n        }\r\n        ;\r\n    }\r\n}","import Core from './StyleIt/index';\r\nimport  MODES  from './StyleIt/constants/Modes.json';\r\n\r\nexport default class StyleIt {\r\n  //expose only the relevant methods..\r\n  constructor(target, config) {\r\n    //TODO: validate target & config..\r\n    const styleIt = new Core(target, config);\r\n    if (styleIt) {  \r\n      this.execCmd = styleIt.execCmd;\r\n      this.toggleClass = styleIt.toggleClass;\r\n      this.link = styleIt.link;\r\n      this.unLink = styleIt.unLink;\r\n      this.save = styleIt.save;\r\n      this.load = styleIt.load;\r\n      this.destroy = styleIt.destroy;\r\n      this.on = styleIt.on;\r\n      this.MODES = MODES;\r\n      //========================================//\r\n      this.toggleClass = this.toggleClass.bind(styleIt);\r\n      this.execCmd = this.execCmd.bind(styleIt);\r\n      this.on = this.on.bind(this);\r\n      this.link = this.link.bind(styleIt);\r\n      this.unLink = this.unLink.bind(styleIt);\r\n      this.save = this.save.bind(styleIt);\r\n      this.load = this.load.bind(styleIt);\r\n      this.destroy = this.destroy.bind(styleIt);\r\n    }\r\n  }\r\n}"],"sourceRoot":""}